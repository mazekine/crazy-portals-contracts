.version sol 0.62.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 16
ENDS
.loc ../contracts/Game.tsol, 60
PUSHINT 4001
OVER
MODPOW2 1
EQINT 0
PUSH S2
GTINT 5
PUSH S3
LESSINT 17
OR
OR
THROWANYIFNOT
.loc ../contracts/Game.tsol, 62
ACCEPT
.loc ../contracts/Game.tsol, 63
DUP
PAIR
SETGLOB 27
.loc ../contracts/Game.tsol, 65
CALLREF {
	CALL $_initOwnable_d61cdbc5_internal_macro$
}
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro generateBoard
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 75
LDU 256
LDU 16
LDU 16
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $generateBoard_a46aa067_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro generateBoard_a46aa067_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 33
CALLREF {
	CALL $_checkOwner_53a72975_internal_macro$
}
.loc ../contracts/abstracts/Cashback.tsol, 13
CALLREF {
	CALL $Utils_no_obj__reserve_413ab4a8_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/Game.tsol, 82
PUSHINT 3005
GETGLOB 16
NOT
THROWANYIFNOT
.loc ../contracts/Game.tsol, 83
PUSHINT 3009
PUSH S2
GETGLOB 27
SECOND
ADDCONST -2
UFITS 16
LEQ
THROWANYIFNOT
.loc ../contracts/Game.tsol, 84
PUSHINT 3009
OVER
GETGLOB 27
SECOND
ADDCONST -2
UFITS 16
LEQ
THROWANYIFNOT
.loc ../contracts/Game.tsol, 86
SWAP
SETGLOB 15
.loc ../contracts/Game.tsol, 87
SETGLOB 14
.loc ../contracts/Game.tsol, 89
DUP
SETGLOB 13
.loc ../contracts/Game.tsol, 90
SETRAND
.loc ../contracts/Game.tsol, 91
LTIME
ADDRAND
.loc ../contracts/Game.tsol, 93
PUSHINT 0
BLKPUSH 2, 0
.loc ../contracts/Game.tsol, 96
PUSHCONT {
	DUP
	GETGLOB 15
	LESS
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 97
	PUSHINT 0
	CALLREF {
		CALL $_getPath_1d89c499_internal_macro$
	}
	.loc ../contracts/Game.tsol, 98
	DUP
	INDEX2 0, 0
	OVER
	INDEX2 0, 1
	CALLREF {
		CALL $_getCell_15debf1e_internal_macro$
	}
	POP S4
	.loc ../contracts/Game.tsol, 99
	DUP
	INDEX2 1, 0
	OVER
	INDEX2 1, 1
	CALLREF {
		CALL $_getCell_15debf1e_internal_macro$
	}
	POP S3
	.loc ../contracts/Game.tsol, 100
	PUSH S3
	PUSHINT 34
	GETGLOBVAR
	NEWC
	PUSH2 S3, S3
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		SWAP
		STSLICECONST 1
		SWAP
		UNTRIPLE
		REVERSE 4, 0
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		STU 8
	}
	IFELSE
	ROTREV
	PUSHINT 16
	DICTUSETB
	PUSHINT 34
	SETGLOBVAR
	.loc ../contracts/Game.tsol, 101
	PUSH S2
	PUSHINT 34
	GETGLOBVAR
	NEWC
	PUSH2 S3, S3
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		SWAP
		STSLICECONST 1
		SWAP
		UNTRIPLE
		REVERSE 4, 0
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		STU 8
	}
	IFELSE
	ROTREV
	PUSHINT 16
	DICTUSETB
	PUSHINT 34
	SETGLOBVAR
	.loc ../contracts/Game.tsol, 102
	GETGLOB 28
	SWAP
	CALLREF {
		UNTRIPLE
		XCHG S2
		NEWC
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		STU 8
	}
	SWAP
	UNPAIR
	OVER
	INC
	ROLLREV 3
	PUSHINT 32
	DICTUSETB
	PAIR
	SETGLOB 28
	.loc ../contracts/Game.tsol, 96
	INC
	UFITS 16
	.loc ../contracts/Game.tsol, 0
}
WHILE
DROP
.loc ../contracts/Game.tsol, 105
PUSHINT 0
PUSHCONT {
	DUP
	GETGLOB 14
	LESS
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 106
	PUSHINT 1
	CALLREF {
		CALL $_getPath_1d89c499_internal_macro$
	}
	.loc ../contracts/Game.tsol, 107
	DUP
	INDEX2 0, 0
	OVER
	INDEX2 0, 1
	CALLREF {
		CALL $_getCell_15debf1e_internal_macro$
	}
	POP S3
	.loc ../contracts/Game.tsol, 108
	DUP
	INDEX2 1, 0
	OVER
	INDEX2 1, 1
	CALLREF {
		CALL $_getCell_15debf1e_internal_macro$
	}
	POP S4
	.loc ../contracts/Game.tsol, 109
	PUSH S3
	PUSHINT 34
	GETGLOBVAR
	NEWC
	PUSH2 S3, S3
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		SWAP
		STSLICECONST 1
		SWAP
		UNTRIPLE
		REVERSE 4, 0
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		STU 8
	}
	IFELSE
	ROTREV
	PUSHINT 16
	DICTUSETB
	PUSHINT 34
	SETGLOBVAR
	.loc ../contracts/Game.tsol, 110
	PUSH S2
	PUSHINT 34
	GETGLOBVAR
	NEWC
	PUSH2 S3, S3
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		SWAP
		STSLICECONST 1
		SWAP
		UNTRIPLE
		REVERSE 4, 0
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		STU 8
	}
	IFELSE
	ROTREV
	PUSHINT 16
	DICTUSETB
	PUSHINT 34
	SETGLOBVAR
	.loc ../contracts/Game.tsol, 111
	GETGLOB 29
	SWAP
	CALLREF {
		UNTRIPLE
		XCHG S2
		NEWC
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		STU 8
	}
	SWAP
	UNPAIR
	OVER
	INC
	ROLLREV 3
	PUSHINT 32
	DICTUSETB
	PAIR
	SETGLOB 29
	.loc ../contracts/Game.tsol, 105
	INC
	UFITS 16
	.loc ../contracts/Game.tsol, 0
}
WHILE
BLKDROP 3
.loc ../contracts/Game.tsol, 114
TRUE
SETGLOB 16
.loc ../contracts/Game.tsol, 116
GETGLOB 29
GETGLOB 28
GETGLOB 27
PUSHSLICE xc00000000000000000000000002602795b
NEWC
STSLICE
SWAP
UNPAIR
XCHG S2
STU 16
STU 16
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/abstracts/Cashback.tsol, 26
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Game.tsol, 0

.macro setMaxPlayers
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 125
LDU 16
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $setMaxPlayers_56748f3f_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setMaxPlayers_56748f3f_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 33
CALLREF {
	CALL $_checkOwner_53a72975_internal_macro$
}
.loc ../contracts/abstracts/Cashback.tsol, 13
CALLREF {
	CALL $Utils_no_obj__reserve_413ab4a8_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/Game.tsol, 126
GETGLOB 21
.loc ../contracts/Game.tsol, 127
XCPU S1, S0
SETGLOB 21
.loc ../contracts/Game.tsol, 129
SWAP
MYADDR
PUSHSLICE xc00000000000000000000000001106b2d3
NEWC
STSLICE
STSLICE
STU 16
STU 16
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/abstracts/Cashback.tsol, 26
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Game.tsol, 0

.macro setMaxRoundTimeMs
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 139
LDU 64
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $setMaxRoundTimeMs_4c8b601a_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setMaxRoundTimeMs_4c8b601a_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 33
CALLREF {
	CALL $_checkOwner_53a72975_internal_macro$
}
.loc ../contracts/abstracts/Cashback.tsol, 13
CALLREF {
	CALL $Utils_no_obj__reserve_413ab4a8_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/Game.tsol, 140
GETGLOB 17
.loc ../contracts/Game.tsol, 141
XCPU S1, S0
SETGLOB 17
.loc ../contracts/Game.tsol, 143
SWAP
MYADDR
PUSHSLICE xc0000000000000000000000000563ef49c
NEWC
STSLICE
STSLICE
STU 64
STU 64
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/abstracts/Cashback.tsol, 26
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Game.tsol, 0

.macro setMaxMoveTimeMs
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 153
LDU 64
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $setMaxMoveTimeMs_8b161bf2_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setMaxMoveTimeMs_8b161bf2_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 33
CALLREF {
	CALL $_checkOwner_53a72975_internal_macro$
}
.loc ../contracts/abstracts/Cashback.tsol, 13
CALLREF {
	CALL $Utils_no_obj__reserve_413ab4a8_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/Game.tsol, 154
GETGLOB 18
.loc ../contracts/Game.tsol, 155
XCPU S1, S0
SETGLOB 18
.loc ../contracts/Game.tsol, 157
SWAP
MYADDR
PUSHSLICE xc00000000000000000000000005360e095
NEWC
STSLICE
STSLICE
STU 64
STU 64
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/abstracts/Cashback.tsol, 26
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Game.tsol, 0

.macro setPrizeFund
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 166
LDU 128
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $setPrizeFund_6600b276_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setPrizeFund_6600b276_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 33
CALLREF {
	CALL $_checkOwner_53a72975_internal_macro$
}
.loc ../contracts/abstracts/Cashback.tsol, 13
CALLREF {
	CALL $Utils_no_obj__reserve_413ab4a8_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/Game.tsol, 167
GETGLOB 20
.loc ../contracts/Game.tsol, 168
XCPU S1, S0
SETGLOB 20
.loc ../contracts/Game.tsol, 170
SWAP
MYADDR
PUSHSLICE xc0000000000000000000000000049a027d
NEWC
STSLICE
STSLICE
STU 128
STU 128
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/abstracts/Cashback.tsol, 26
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Game.tsol, 0

.macro setEntryStake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 179
LDU 128
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $setEntryStake_21c97a89_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setEntryStake_21c97a89_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 33
CALLREF {
	CALL $_checkOwner_53a72975_internal_macro$
}
.loc ../contracts/abstracts/Cashback.tsol, 13
CALLREF {
	CALL $Utils_no_obj__reserve_413ab4a8_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/Game.tsol, 180
GETGLOB 22
.loc ../contracts/Game.tsol, 181
XCPU S1, S0
SETGLOB 22
.loc ../contracts/Game.tsol, 183
SWAP
MYADDR
PUSHSLICE xc00000000000000000000000002400dc55
NEWC
STSLICE
STSLICE
STU 128
STU 128
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/abstracts/Cashback.tsol, 26
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Game.tsol, 0

.macro setRake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 191
LDU 128
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $setRake_ddfd1c5c_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setRake_ddfd1c5c_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 33
CALLREF {
	CALL $_checkOwner_53a72975_internal_macro$
}
.loc ../contracts/abstracts/Cashback.tsol, 13
CALLREF {
	CALL $Utils_no_obj__reserve_413ab4a8_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/Game.tsol, 192
GETGLOB 24
.loc ../contracts/Game.tsol, 193
XCPU S1, S0
SETGLOB 24
.loc ../contracts/Game.tsol, 195
SWAP
MYADDR
PUSHSLICE xc00000000000000000000000004f9adc72
NEWC
STSLICE
STSLICE
STU 128
STU 128
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/abstracts/Cashback.tsol, 26
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Game.tsol, 0

.macro setJackpotRate
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 203
LDU 8
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $setJackpotRate_eb98a7e8_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setJackpotRate_eb98a7e8_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 33
CALLREF {
	CALL $_checkOwner_53a72975_internal_macro$
}
.loc ../contracts/abstracts/Cashback.tsol, 13
CALLREF {
	CALL $Utils_no_obj__reserve_413ab4a8_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/Game.tsol, 204
PUSHINT 3015
OVER
GTINT -1
PUSH S2
LESSINT 101
AND
THROWANYIFNOT
.loc ../contracts/Game.tsol, 206
GETGLOB 25
.loc ../contracts/Game.tsol, 207
XCPU S1, S0
SETGLOB 25
.loc ../contracts/Game.tsol, 209
SWAP
MYADDR
PUSHSLICE xc00000000000000000000000007a84b983
NEWC
STSLICE
STSLICE
STU 8
STU 8
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/abstracts/Cashback.tsol, 26
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Game.tsol, 0

.macro setAutostartMs
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 215
OVER
PUSHCONT {
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDU 64
	}
	IF
}
PUSHCONT {
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDU 64
	}
	IF
}
IFELSE
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $setAutostartMs_b864e2bc_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setAutostartMs_b864e2bc_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 33
CALLREF {
	CALL $_checkOwner_53a72975_internal_macro$
}
.loc ../contracts/abstracts/Cashback.tsol, 13
CALLREF {
	CALL $Utils_no_obj__reserve_413ab4a8_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/Game.tsol, 216
GETGLOB 19
.loc ../contracts/Game.tsol, 217
XCPU S1, S0
SETGLOB 19
.loc ../contracts/Game.tsol, 219
SWAP
MYADDR
PUSHSLICE xc0000000000000000000000000723f44a5
NEWC
STSLICE
STSLICE
XCPU S1, S0
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 64
}
IFELSE
XCPU S1, S0
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 64
}
IFELSE
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/abstracts/Cashback.tsol, 26
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Game.tsol, 0

.macro setPlayerGiveUpAllowed
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 227
LDI 1
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $setPlayerGiveUpAllowed_63808914_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setPlayerGiveUpAllowed_63808914_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 33
CALLREF {
	CALL $_checkOwner_53a72975_internal_macro$
}
.loc ../contracts/abstracts/Cashback.tsol, 13
CALLREF {
	CALL $Utils_no_obj__reserve_413ab4a8_macro$
}
PUSHINT 0
RAWRESERVE
.loc ../contracts/Game.tsol, 228
GETGLOB 23
.loc ../contracts/Game.tsol, 229
XCPU S1, S0
SETGLOB 23
.loc ../contracts/Game.tsol, 231
SWAP
MYADDR
PUSHSLICE xc0000000000000000000000000462373e4
NEWC
STSLICE
STSLICE
STI 1
STI 1
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/abstracts/Cashback.tsol, 26
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Game.tsol, 0

.macro createRound
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 239
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $createRound_1b411fc8_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST x8d35eca7
	SWAP
	UNTUPLE 13
	REVERSE 14, 0
	STU 64
	STU 8
	STSLICE
	STU 16
	STI 1
	STU 64
	STU 64
	XCPU S1, S0
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		SWAP
		STSLICECONST 1
		STU 64
	}
	IFELSE
	ROLLREV 5
	NEWC
	STU 128
	STU 128
	STI 1
	STU 128
	STU 8
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	SWAP
	UNTUPLE 13
	REVERSE 14, 0
	STU 64
	STU 8
	STSLICE
	STU 16
	STI 1
	STU 64
	STU 64
	XCPU S1, S0
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		SWAP
		STSLICECONST 1
		STU 64
	}
	IFELSE
	ROLLREV 5
	NEWC
	STU 128
	STU 128
	STI 1
	STU 128
	STU 8
	STBREFR
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro createRound_1b411fc8_internal_macro
.loc ../contracts/Game.tsol, 244
PUSHINT 5001
GETGLOB 16
THROWANYIFNOT
.loc ../contracts/Game.tsol, 246
BLOCKLT
.loc ../contracts/Game.tsol, 247
PUSHINT 3005
OVER
GETGLOB 26
PUSHINT 64
DICTUGET
NULLSWAPIFNOT
NIP
NOT
THROWANYIFNOT
.loc ../contracts/Game.tsol, 249
GETGLOB 19
.loc ../contracts/Game.tsol, 250
DUP
ISNULL
PUSHCONT {
	.loc ../contracts/Game.tsol, 251
	DUP
	ISNULL
	THROWIF 63
	OVER
	ADD
	UFITS 64
	.loc ../contracts/Game.tsol, 0
}
IFNOT
.loc ../contracts/Game.tsol, 254
OVER
PUSHINT 0
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
GETGLOB 21
FALSE
PUSH S6
GETGLOB 17
ADD
UFITS 64
GETGLOB 18
ROLL 7
GETGLOB 22
GETGLOB 20
FALSE
GETGLOB 24
GETGLOB 25
TUPLE 13
.loc ../contracts/Game.tsol, 273
OVER
GETGLOB 26
PUSH S2
CALLREF {
	UNTUPLE 13
	REVERSE 13, 0
	NEWC
	STU 64
	STU 8
	STSLICE
	STU 16
	STI 1
	STU 64
	STU 64
	XCPU S1, S0
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		SWAP
		STSLICECONST 1
		STU 64
	}
	IFELSE
	STU 128
	ROLLREV 4
	NEWC
	STU 128
	STI 1
	STU 128
	STU 8
	STBREFR
}
ENDC
ROTREV
PUSHINT 64
DICTUSETREF
SETGLOB 26
.loc ../contracts/Game.tsol, 274
GETGLOB 20
PUSHINT 0
NEWDICT
TRIPLE
PUSHINT 35
GETGLOBVAR
DUP
THIRD
PUXC S4, S-1
ROLL 3
CALLREF {
	UNTRIPLE
	XCHG S2
	NEWC
	STU 128
	STU 128
	STDICT
}
ROTREV
PUSHINT 64
DICTUSETB
SETINDEX 2
PUSHINT 35
SETGLOBVAR
.loc ../contracts/Game.tsol, 276
SWAP
MYADDR
PUSHSLICE xc0000000000000000000000000456efc9e
NEWC
STSLICE
STSLICE
STU 64
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Game.tsol, 278
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
.loc ../contracts/Game.tsol, 0

.macro joinRound
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 287
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
LDU 64
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $joinRound_5397e6c2_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3781344765
	STUR 130
	STI 1
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STI 1
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro joinRound_5397e6c2_internal_macro
.loc ../contracts/Game.tsol, 292
DEPTH
ADDCONST -2
PICK
PUSHINT 50000000
SUB
UFITS 128
PUSHINT 12
RAWRESERVE
.loc ../contracts/Game.tsol, 294
PUSHINT 3006
OVER
GETGLOB 26
PUSHINT 64
DICTUGET
NULLSWAPIFNOT
NIP
THROWANYIFNOT
.loc ../contracts/Game.tsol, 295
PUSHINT 4001
OVER
GETGLOB 31
PUSHINT 64
DICTUGET
PUSHCONT {
	LDU 32
	PLDDICT
}
PUSHCONT {
	PUSHINT 0
	NEWDICT
}
IFELSE
PAIR
FIRST
PUSH S2
GETGLOB 26
PUSHINT 64
DICTUGETREF
PUSHCONT {
	CTOS
	CALLREF {
		LDU 64
		LDU 8
		OVER
		GTINT 4
		THROWIF 73
		LDMSGADDR
		LDU 16
		LDI 1
		LDU 64
		LDU 64
		LDI 1
		SWAP
		NULLROTRIFNOT
		PUSHCONT {
			LDU 64
		}
		IF
		LDU 128
		LDREF
		ENDS
		CTOS
		LDU 128
		LDI 1
		LDU 128
		LDU 8
		ENDS
		TUPLE 13
	}
}
PUSHCONT {
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	BLKPUSH 3, 0
	NULL
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 13
}
IFELSE
INDEX 3
LESS
THROWANYIFNOT
.loc ../contracts/Game.tsol, 297
GETGLOB 9
.loc ../contracts/Game.tsol, 298
OVER
GETGLOB 31
PUSHINT 64
DICTUGET
PUSHCONT {
	LDU 32
	PLDDICT
}
PUSHCONT {
	PUSHINT 0
	NEWDICT
}
IFELSE
PAIR
SECOND
PUSHINT 0
NULL
PUSHCONT {
	PUSH2 S1, S2
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	DROP
	DUP
	POP S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 299
	PUSHINT 3008
	PUSH2 S1, S4
	SDEQ
	NOT
	THROWANYIFNOT
	.loc ../contracts/Game.tsol, 0
	OVER
	INC
	POP S2
}
WHILE
BLKDROP 3
.loc ../contracts/Game.tsol, 302
DUP
GETGLOB 30
PUSHINT 267
DICTGET
NULLSWAPIFNOT
NIP
PUSHCONT {
	.loc ../contracts/Game.tsol, 304
	PUSHINT 3008
	OVER
	GETGLOB 30
	PUSHINT 267
	DICTGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	PUSH S3
	NEQ
	THROWANYIFNOT
	.loc ../contracts/Game.tsol, 307
	DUP
	GETGLOB 30
	PUSHINT 267
	DICTGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	.loc ../contracts/Game.tsol, 308
	PUSHINT 4001
	OVER
	GETGLOB 26
	PUSHINT 64
	DICTUGETREF
	PUSHCONT {
		CTOS
		CALLREF {
			LDU 64
			LDU 8
			OVER
			GTINT 4
			THROWIF 73
			LDMSGADDR
			LDU 16
			LDI 1
			LDU 64
			LDU 64
			LDI 1
			SWAP
			NULLROTRIFNOT
			PUSHCONT {
				LDU 64
			}
			IF
			LDU 128
			LDREF
			ENDS
			CTOS
			LDU 128
			LDI 1
			LDU 128
			LDU 8
			ENDS
			TUPLE 13
		}
	}
	PUSHCONT {
		PUSHINT 0
		DUP
		PUSHREFSLICE {
			.blob x8000000000000000000000000000000000000000000000000000000000000000001_
		}
		PUSHINT 0
		BLKPUSH 3, 0
		NULL
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 13
	}
	IFELSE
	SECOND
	EQINT 3
	DUP
	PUSHCONT {
		DROP
		OVER
		GETGLOB 26
		PUSHINT 64
		DICTUGETREF
		PUSHCONT {
			CTOS
			CALLREF {
				LDU 64
				LDU 8
				OVER
				GTINT 4
				THROWIF 73
				LDMSGADDR
				LDU 16
				LDI 1
				LDU 64
				LDU 64
				LDI 1
				SWAP
				NULLROTRIFNOT
				PUSHCONT {
					LDU 64
				}
				IF
				LDU 128
				LDREF
				ENDS
				CTOS
				LDU 128
				LDI 1
				LDU 128
				LDU 8
				ENDS
				TUPLE 13
			}
		}
		PUSHCONT {
			PUSHINT 0
			DUP
			PUSHREFSLICE {
				.blob x8000000000000000000000000000000000000000000000000000000000000000001_
			}
			PUSHINT 0
			BLKPUSH 3, 0
			NULL
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 13
		}
		IFELSE
		SECOND
		EQINT 4
	}
	IFNOT
	THROWANYIFNOT
	.loc ../contracts/Game.tsol, 0
	DROP
}
IF
.loc ../contracts/Game.tsol, 311
OVER
GETGLOB 26
PUSHINT 64
DICTUGETREF
PUSHCONT {
	CTOS
	CALLREF {
		LDU 64
		LDU 8
		OVER
		GTINT 4
		THROWIF 73
		LDMSGADDR
		LDU 16
		LDI 1
		LDU 64
		LDU 64
		LDI 1
		SWAP
		NULLROTRIFNOT
		PUSHCONT {
			LDU 64
		}
		IF
		LDU 128
		LDREF
		ENDS
		CTOS
		LDU 128
		LDI 1
		LDU 128
		LDU 8
		ENDS
		TUPLE 13
	}
}
PUSHCONT {
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	BLKPUSH 3, 0
	NULL
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 13
}
IFELSE
.loc ../contracts/Game.tsol, 312
DUP
INDEX 8
GTINT 0
PUSHCONT {
	.loc ../contracts/Game.tsol, 314
	DUP
	INDEX 8
	PUSHINT 35
	GETGLOBVAR
	DUP
	THIRD
	PUXC S5, S-1
	DUP2
	PUSHINT 64
	DICTUGET
IFREFELSEREF
{
		LDU 128
		LDU 128
		LDDICT
		ENDS
		TRIPLE
}
{
		PUSHINT 0
		DUP
		NEWDICT
		TRIPLE
}
	DUP
	SECOND
	ROLL 5
	ADD
	UFITS 128
	SETINDEX 1
	CALLREF {
		UNTRIPLE
		XCHG S2
		NEWC
		STU 128
		STU 128
		STDICT
	}
	ROTREV
	PUSHINT 64
	DICTUSETB
	SETINDEX 2
	PUSHINT 35
	SETGLOBVAR
	.loc ../contracts/Game.tsol, 316
	DUP
	INDEX 8
	PUSHINT 0
	RAWRESERVE
	.loc ../contracts/Game.tsol, 0
}
IF
.loc ../contracts/Game.tsol, 319
DROP
DUP
GETGLOB 30
PUSH S3
NEWC
STU 64
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 30
.loc ../contracts/Game.tsol, 320
OVER
GETGLOB 31
DUP2
PUSHINT 64
DICTUGET
PUSHCONT {
	LDU 32
	PLDDICT
}
PUSHCONT {
	PUSHINT 0
	NEWDICT
}
IFELSE
PAIR
PUXC S3, S-1
UNPAIR
OVER
INC
ROLLREV 3
PUSHINT 32
DICTUSET
PAIR
NEWC
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
ROTREV
PUSHINT 64
DICTUSETB
SETGLOB 31
.loc ../contracts/Game.tsol, 321
DUP
PUSHINT 33
GETGLOBVAR
NEWC
STSLICECONST x0000
ROTREV
PUSHINT 267
DICTSETB
PUSHINT 33
SETGLOBVAR
.loc ../contracts/Game.tsol, 324
OVER
CALLREF {
	CALL $_tryStartRound_153a7d5b_internal_macro$
}
.loc ../contracts/Game.tsol, 326
SWAP
MYADDR
PUSHREFSLICE {
	.blob xc0000000000000000000000001
}
NEWC
STSLICE
ROLLREV 3
NEWC
STSLICECONST x26975c64
STSLICE
STU 64
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Game.tsol, 328
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
TRUE
.loc ../contracts/Game.tsol, 0

.macro roll
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 337
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $roll_cd5e3c5d_internal_macro$
}
PUSH S2
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 98
	STZEROES
	REVERSE 2, 1
	STSLICECONST xd569d012
	STU 16
	SWAP
	UNPAIR
	XCHG S2
	STU 16
	STU 16
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	REVERSE 2, 1
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 16
	SWAP
	UNPAIR
	XCHG S2
	STU 16
	STU 16
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro roll_cd5e3c5d_internal_macro
.loc ../contracts/Game.tsol, 337
PUSHINT 0
BLKPUSH 2, 0
PAIR
.loc ../contracts/Game.tsol, 342
PUSHINT 5001
GETGLOB 16
THROWANYIFNOT
.loc ../contracts/Game.tsol, 344
DEPTH
ADDCONST -2
PICK
PUSHINT 50000000
SUB
UFITS 128
PUSHINT 1
RAWRESERVE
.loc ../contracts/Game.tsol, 346
GETGLOB 9
.loc ../contracts/Game.tsol, 350
PUSHINT 4001
OVER
GETGLOB 30
PUSHINT 267
DICTGET
NULLSWAPIFNOT
NIP
THROWANYIFNOT
.loc ../contracts/Game.tsol, 353
PUSHINT 3006
OVER
PUSHINT 33
GETGLOBVAR
PUSHINT 267
DICTGET
NULLSWAPIFNOT
NIP
THROWANYIFNOT
.loc ../contracts/Game.tsol, 355
DUP
GETGLOB 30
PUSHINT 267
DICTGET
ZEROSWAPIFNOT
PUSHCONT {
	PLDU 64
}
IF
.loc ../contracts/Game.tsol, 357
DUP
GETGLOB 26
PUSHINT 64
DICTUGET
NULLSWAPIFNOT
NIP
PUSHCONT {
	.loc ../contracts/Game.tsol, 358
	OVER
	GETGLOB 30
	PUSHINT 267
	DICTDEL
	DROP
	SETGLOB 30
	.loc ../contracts/Game.tsol, 359
	DROP
	PUSHINT 33
	GETGLOBVAR
	PUSHINT 267
	DICTDEL
	DROP
	PUSHINT 33
	SETGLOBVAR
	.loc ../contracts/Game.tsol, 360
	PUSHINT 3006
	THROWANY
	.loc ../contracts/Game.tsol, 0
}
IFNOT
.loc ../contracts/Game.tsol, 363
DUP
GETGLOB 26
PUSHINT 64
DICTUGETREF
PUSHCONT {
	CTOS
	CALLREF {
		LDU 64
		LDU 8
		OVER
		GTINT 4
		THROWIF 73
		LDMSGADDR
		LDU 16
		LDI 1
		LDU 64
		LDU 64
		LDI 1
		SWAP
		NULLROTRIFNOT
		PUSHCONT {
			LDU 64
		}
		IF
		LDU 128
		LDREF
		ENDS
		CTOS
		LDU 128
		LDI 1
		LDU 128
		LDU 8
		ENDS
		TUPLE 13
	}
}
PUSHCONT {
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	BLKPUSH 3, 0
	NULL
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 13
}
IFELSE
.loc ../contracts/Game.tsol, 365
PUSHINT 5005
OVER
SECOND
NEQINT 3
THROWANYIFNOT
.loc ../contracts/Game.tsol, 368
DUP
INDEX 5
BLOCKLT
LEQ
PUSHCONT {
	.loc ../contracts/Game.tsol, 369
	DROP
	GETGLOB 26
	DUP2
	PUSHINT 64
	DICTUGETREF
	PUSHCONT {
		CTOS
		CALLREF {
			LDU 64
			LDU 8
			OVER
			GTINT 4
			THROWIF 73
			LDMSGADDR
			LDU 16
			LDI 1
			LDU 64
			LDU 64
			LDI 1
			SWAP
			NULLROTRIFNOT
			PUSHCONT {
				LDU 64
			}
			IF
			LDU 128
			LDREF
			ENDS
			CTOS
			LDU 128
			LDI 1
			LDU 128
			LDU 8
			ENDS
			TUPLE 13
		}
	}
	PUSHCONT {
		PUSHINT 0
		DUP
		PUSHREFSLICE {
			.blob x8000000000000000000000000000000000000000000000000000000000000000001_
		}
		PUSHINT 0
		BLKPUSH 3, 0
		NULL
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 13
	}
	IFELSE
	PUSHINT 4
	SETINDEX 1
	CALLREF {
		UNTUPLE 13
		REVERSE 13, 0
		NEWC
		STU 64
		STU 8
		STSLICE
		STU 16
		STI 1
		STU 64
		STU 64
		XCPU S1, S0
		ISNULL
		PUSHCONT {
			DROP
			STSLICECONST 0
		}
		PUSHCONT {
			SWAP
			STSLICECONST 1
			STU 64
		}
		IFELSE
		STU 128
		ROLLREV 4
		NEWC
		STU 128
		STI 1
		STU 128
		STU 8
		STBREFR
	}
	ENDC
	ROTREV
	PUSHINT 64
	DICTUSETREF
	SETGLOB 26
	.loc ../contracts/Game.tsol, 370
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc ../contracts/Game.tsol, 371
	PUSHINT 5004
	THROWANY
	.loc ../contracts/Game.tsol, 0
}
IF
.loc ../contracts/Game.tsol, 375
DUP
SECOND
EQINT 1
PUSHCONT {
	.loc ../contracts/Game.tsol, 378
	GETPARAM 7
	FIRST
	PUSHINT 200000000
	PUSH S2
	INDEX 9
	ADD
	UFITS 128
	GREATER
	THROWIFNOT 1060
	.loc ../contracts/Game.tsol, 381
	PUSHINT 4001
	PUSH S2
	GETGLOB 31
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		LDU 32
		PLDDICT
	}
	PUSHCONT {
		PUSHINT 0
		NEWDICT
	}
	IFELSE
	PAIR
	FIRST
	PUSH S2
	INDEX 3
	EQUAL
	THROWANYIFNOT
	.loc ../contracts/Game.tsol, 383
	PUSHINT 2
	SETINDEX 1
	.loc ../contracts/Game.tsol, 0
}
IF
.loc ../contracts/Game.tsol, 387
DUP
INDEX 11
PUSHINT 0
RAWRESERVE
.loc ../contracts/Game.tsol, 389
DUP
INDEX 11
OVER
INDEX 12
PUSHINT 100
MULDIV
UFITS 128
.loc ../contracts/Game.tsol, 390
OVER
INDEX 11
OVER
SUB
UFITS 128
.loc ../contracts/Game.tsol, 391
PUSHINT 35
GETGLOBVAR
DUP
FIRST
ROT
ADD
UFITS 128
SETINDEX 0
DUP
PUSHINT 35
SETGLOBVAR
.loc ../contracts/Game.tsol, 392
DUP
SECOND
ROT
ADD
UFITS 128
SETINDEX 1
PUSHINT 35
SETGLOBVAR
.loc ../contracts/Game.tsol, 394
NEWDICT
.loc ../contracts/Game.tsol, 396
PUSHINT 0
NEWDICT
PAIR
.loc ../contracts/Game.tsol, 398
PUSH S3
PUSHINT 32
GETGLOBVAR
PUSHINT 64
DICTUGET
NULLSWAPIFNOT
NIP
PUSHCONT {
	.loc ../contracts/Game.tsol, 400
	PUSH S3
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 64
	DICTUGET
	NULLSWAPIFNOT
	IFREF {
		LDU 64
		LDDICT
		ENDS
		PAIR
	}
	DUP
	ISNULL
	THROWIF 63
	NIP
	.loc ../contracts/Game.tsol, 402
	DUP
	FIRST
	BLOCKLT
	LESS
	DUP
	PUSHCONT {
		DROP
		PUSHINT 0
		NEWDICT
		PAIR
		OVER
		SECOND
		DUP
		PUSHINT 267
		DICTMIN
		NULLSWAPIFNOT
		PUSHCONT {
			SWAP
			LDU 32
			PLDDICT
			PAIR
			PAIR
		}
		IF
		PUSHCONT {
			DUP
			ISNULL
			NOT
		}
		PUSHCONT {
			PUSH2 S2, S0
			FIRST
			SWAP
			UNPAIR
			OVER
			INC
			ROLLREV 3
			PUSHINT 32
			DICTUSET
			PAIR
			POP S3
			FIRST
			OVER
			PUSHINT 267
			DICTGETNEXT
			NULLSWAPIFNOT
			PUSHCONT {
				SWAP
				LDU 32
				PLDDICT
				PAIR
				PAIR
			}
			IF
		}
		WHILE
		DROP2
		FIRST
		PUSH S3
		INDEX 3
		EQUAL
	}
	IFNOT
	PUSHCONT {
		.loc ../contracts/Game.tsol, 406
		BLOCKLT
		PUSH S3
		INDEX 6
		ADD
		UFITS 64
		PUSH S2
		PAIR
		NIP
		.loc ../contracts/Game.tsol, 0
	}
	IF
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 409
	BLOCKLT
	PUSH S3
	INDEX 6
	ADD
	UFITS 64
	PUSH S2
	PAIR
	NIP
}
IFELSE
.loc ../contracts/Game.tsol, 413
PUSHINT 0
NEWDICT
PAIR
OVER
SECOND
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	LDU 32
	PLDDICT
	PAIR
	PAIR
}
IF
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	PUSH2 S2, S0
	FIRST
	SWAP
	UNPAIR
	OVER
	INC
	ROLLREV 3
	PUSHINT 32
	DICTUSET
	PAIR
	POP S3
	FIRST
	OVER
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		LDU 32
		PLDDICT
		PAIR
		PAIR
	}
	IF
}
WHILE
DROP2
SECOND
PUSHINT 0
NULL
PUSHCONT {
	PUSH2 S1, S2
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	DROP
	DUP
	POP S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 414
	PUSHINT 4001
	PUSH2 S1, S8
	SDEQ
	NOT
	THROWANYIFNOT
	.loc ../contracts/Game.tsol, 0
	OVER
	INC
	POP S2
}
WHILE
BLKDROP 3
.loc ../contracts/Game.tsol, 417
DUP
SECOND
PUXC S5, S-1
NEWDICT
NEWC
STSLICECONST x00000000
STDICT
ROTREV
PUSHINT 267
DICTSETB
SETINDEX 1
.loc ../contracts/Game.tsol, 419
LTIME
ADDRAND
.loc ../contracts/Game.tsol, 420
PUSHINT 6
RAND
INC
UFITS 8
.loc ../contracts/Game.tsol, 422
ROLL 7
PUSH S6
PUSHSLICE xc0000000000000000000000000536fde55
NEWC
STSLICE
STSLICE
STU 16
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/Game.tsol, 426
PUSHINT 0
BLKPUSH 2, 0
PAIR
PAIR
PUSH2 S0, S6
.loc ../contracts/Game.tsol, 428
PUSHINT 33
GETGLOBVAR
PUSHINT 267
DICTGET
ZEROSWAPIFNOT
PUSHCONT {
	PLDU 16
}
IF
.loc ../contracts/Game.tsol, 429
PUSH2 S0, S3
ADD
UFITS 16
.loc ../contracts/Game.tsol, 430
GETGLOB 27
FIRST
FITS 16
GETGLOB 27
SECOND
FITS 16
MUL
FITS 16
OVER
FITS 16
SUB
FITS 16
.loc ../contracts/Game.tsol, 434
PUSH S2
ROLL 3
CALLREF {
	CALL $_getCoordinate_3e662623_internal_macro$
}
PAIR
POP S3
.loc ../contracts/Game.tsol, 435
PUSH2 S1, S1
CALLREF {
	CALL $_getCoordinate_3e662623_internal_macro$
}
PAIR
POP S4
.loc ../contracts/Game.tsol, 437
FALSE ; decl return flag
OVER
LESSINT 0
PUSHCONT {
	.loc ../contracts/Game.tsol, 438
	GETGLOB 27
	FIRST
	GETGLOB 27
	SECOND
	MUL
	UFITS 16
	FITS 16
	PUSH S2
	ADD
	FITS 16
	UFITS 16
	POP S3
	.loc ../contracts/Game.tsol, 439
	PUSH2 S2, S2
	CALLREF {
		CALL $_getCoordinate_3e662623_internal_macro$
	}
	PAIR
	POP S5
	.loc ../contracts/Game.tsol, 0
}
PUSHCONT {
	OVER
	PUSHCONT {
		.loc ../contracts/Game.tsol, 442
		PUSH S9
		GETGLOB 26
		DUP2
		PUSHINT 64
		DICTUGETREF
		PUSHCONT {
			CTOS
			CALLREF {
				LDU 64
				LDU 8
				OVER
				GTINT 4
				THROWIF 73
				LDMSGADDR
				LDU 16
				LDI 1
				LDU 64
				LDU 64
				LDI 1
				SWAP
				NULLROTRIFNOT
				PUSHCONT {
					LDU 64
				}
				IF
				LDU 128
				LDREF
				ENDS
				CTOS
				LDU 128
				LDI 1
				LDU 128
				LDU 8
				ENDS
				TUPLE 13
			}
		}
		PUSHCONT {
			PUSHINT 0
			DUP
			PUSHREFSLICE {
				.blob x8000000000000000000000000000000000000000000000000000000000000000001_
			}
			PUSHINT 0
			BLKPUSH 3, 0
			NULL
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 13
		}
		IFELSE
		PUSHINT 3
		SETINDEX 1
		CALLREF {
			UNTUPLE 13
			REVERSE 13, 0
			NEWC
			STU 64
			STU 8
			STSLICE
			STU 16
			STI 1
			STU 64
			STU 64
			XCPU S1, S0
			ISNULL
			PUSHCONT {
				DROP
				STSLICECONST 0
			}
			PUSHCONT {
				SWAP
				STSLICECONST 1
				STU 64
			}
			IFELSE
			STU 128
			ROLLREV 4
			NEWC
			STU 128
			STI 1
			STU 128
			STU 8
			STBREFR
		}
		ENDC
		ROTREV
		PUSHINT 64
		DICTUSETREF
		SETGLOB 26
		.loc ../contracts/Game.tsol, 443
		BLKPUSH 2, 10
		GETGLOB 26
		DUP2
		PUSHINT 64
		DICTUGETREF
		PUSHCONT {
			CTOS
			CALLREF {
				LDU 64
				LDU 8
				OVER
				GTINT 4
				THROWIF 73
				LDMSGADDR
				LDU 16
				LDI 1
				LDU 64
				LDU 64
				LDI 1
				SWAP
				NULLROTRIFNOT
				PUSHCONT {
					LDU 64
				}
				IF
				LDU 128
				LDREF
				ENDS
				CTOS
				LDU 128
				LDI 1
				LDU 128
				LDU 8
				ENDS
				TUPLE 13
			}
		}
		PUSHCONT {
			PUSHINT 0
			DUP
			PUSHREFSLICE {
				.blob x8000000000000000000000000000000000000000000000000000000000000000001_
			}
			PUSHINT 0
			BLKPUSH 3, 0
			NULL
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 13
		}
		IFELSE
		ROLL 3
		SETINDEX 2
		CALLREF {
			UNTUPLE 13
			REVERSE 13, 0
			NEWC
			STU 64
			STU 8
			STSLICE
			STU 16
			STI 1
			STU 64
			STU 64
			XCPU S1, S0
			ISNULL
			PUSHCONT {
				DROP
				STSLICECONST 0
			}
			PUSHCONT {
				SWAP
				STSLICECONST 1
				STU 64
			}
			IFELSE
			STU 128
			ROLLREV 4
			NEWC
			STU 128
			STI 1
			STU 128
			STU 8
			STBREFR
		}
		ENDC
		ROTREV
		PUSHINT 64
		DICTUSETREF
		SETGLOB 26
		.loc ../contracts/Game.tsol, 444
		PUSH2 S6, S6
		SECOND
		PUXC S12, S-1
		DUP2
		PUSHINT 267
		DICTGET
		PUSHCONT {
			LDU 32
			PLDDICT
		}
		PUSHCONT {
			PUSHINT 0
			NEWDICT
		}
		IFELSE
		PAIR
		BLKSWAP 2, 7
		SWAP
		PAIR
		CALLREF {
			UNPAIR
			NEWC
			ROT
			UNPAIR
			XCHG S2
			STU 16
			SWAP
			UNPAIR
			XCHG S2
			STU 16
			STU 16
			SWAP
			UNPAIR
			XCHG S2
			STU 16
			SWAP
			UNPAIR
			XCHG S2
			STU 16
			STU 16
		}
		SWAP
		UNPAIR
		OVER
		INC
		ROLLREV 3
		PUSHINT 32
		DICTUSETB
		PAIR
		NEWC
		SWAP
		UNPAIR
		XCHG S2
		STU 32
		STDICT
		ROTREV
		PUSHINT 267
		DICTSETB
		SETINDEX 1
		POP S5
		.loc ../contracts/Game.tsol, 445
		ROLL 4
		PUSH S7
		PUSHINT 32
		GETGLOBVAR
		ROT
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STU 64
			STDICT
		}
		ROTREV
		PUSHINT 64
		DICTUSETB
		PUSHINT 32
		SETGLOBVAR
		.loc ../contracts/Game.tsol, 447
		BLKSWAP 2, 6
		MYADDR
		PUSHREFSLICE {
			.blob xc0000000000000000000000001
		}
		NEWC
		STSLICE
		ROLLREV 3
		NEWC
		STSLICECONST x5110304b
		STSLICE
		STU 64
		SWAP
		NEWC
		STSLICE
		STBREFR
		STBREFR
		ENDC
		PUSHINT 0
		SENDRAWMSG
		.loc ../contracts/Game.tsol, 448
		GETGLOB 4
		PUSHINT 0
		SETINDEXQ 2
		PUSHPOW2 7
		SETINDEXQ 4
		FALSE
		SETINDEXQ 1
		SETGLOB 4
		SWAP2
		CALLREF {
			CALL $_getCoordinate_3e662623_internal_macro$
		}
		BLKDROP2 5, 2
		PUSHINT 4
		.loc ../contracts/Game.tsol, 0
	}
	IFNOTJMP
	.loc ../contracts/Game.tsol, 0
}
IFELSE
IFRET
.loc ../contracts/Game.tsol, 451
DROP
PUSH2 S4, S4
SECOND
PUXC S10, S-1
DUP2
PUSHINT 267
DICTGET
PUSHCONT {
	LDU 32
	PLDDICT
}
PUSHCONT {
	PUSHINT 0
	NEWDICT
}
IFELSE
PAIR
PUSH2 S5, S6
PAIR
CALLREF {
	UNPAIR
	NEWC
	ROT
	UNPAIR
	XCHG S2
	STU 16
	SWAP
	UNPAIR
	XCHG S2
	STU 16
	STU 16
	SWAP
	UNPAIR
	XCHG S2
	STU 16
	SWAP
	UNPAIR
	XCHG S2
	STU 16
	STU 16
}
SWAP
UNPAIR
OVER
INC
ROLLREV 3
PUSHINT 32
DICTUSETB
PAIR
NEWC
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
ROTREV
PUSHINT 267
DICTSETB
SETINDEX 1
POP S5
.loc ../contracts/Game.tsol, 453
PUSH S2
INDEX2 1, 0
.loc ../contracts/Game.tsol, 454
PUSH S3
INDEX2 1, 1
.loc ../contracts/Game.tsol, 456
PUSHINT 0
.loc ../contracts/Game.tsol, 457
PUSHCONT {
	DUP
	NOT
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 458
	PUSH3 S11, S2, S1
	CALLREF {
		CALL $_checkContinuation_c7dec94d_internal_macro$
	}
	.loc ../contracts/Game.tsol, 459
	PUSH2 S1, S4
	EQUAL
	PUSH2 S1, S4
	EQUAL
	AND
	PUSHCONT {
		.loc ../contracts/Game.tsol, 460
		TRUE
		POP S3
	}
	PUSHCONT {
		.loc ../contracts/Game.tsol, 462
		OVER
		POP S5
		.loc ../contracts/Game.tsol, 463
		DUP
		POP S4
		.loc ../contracts/Game.tsol, 465
		PUSH S7
		POP S7
		.loc ../contracts/Game.tsol, 466
		BLKPUSH 2, 4
		CALLREF {
			CALL $_getCell_15debf1e_internal_macro$
		}
		BLKPUSH 2, 5
		PAIR
		PAIR
		POP S8
		.loc ../contracts/Game.tsol, 467
		PUSH2 S9, S9
		SECOND
		PUXC S15, S-1
		DUP2
		PUSHINT 267
		DICTGET
		PUSHCONT {
			LDU 32
			PLDDICT
		}
		PUSHCONT {
			PUSHINT 0
			NEWDICT
		}
		IFELSE
		PAIR
		PUSH2 S10, S11
		PAIR
		CALLREF {
			UNPAIR
			NEWC
			ROT
			UNPAIR
			XCHG S2
			STU 16
			SWAP
			UNPAIR
			XCHG S2
			STU 16
			STU 16
			SWAP
			UNPAIR
			XCHG S2
			STU 16
			SWAP
			UNPAIR
			XCHG S2
			STU 16
			STU 16
		}
		SWAP
		UNPAIR
		OVER
		INC
		ROLLREV 3
		PUSHINT 32
		DICTUSETB
		PAIR
		NEWC
		SWAP
		UNPAIR
		XCHG S2
		STU 32
		STDICT
		ROTREV
		PUSHINT 267
		DICTSETB
		SETINDEX 1
		POP S10
		.loc ../contracts/Game.tsol, 468
		BLKPUSH 2, 7
		BLKPUSH 2, 15
		MYADDR
		PUSHREFSLICE {
			.blob xc0000000000000000000000001
		}
		NEWC
		STSLICE
		ROLLREV 5
		NEWC
		STSLICECONST x622f84d4
		STSLICE
		STU 64
		ROLLREV 3
		NEWC
		STSLICE
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		STBREFR
		STBREFR
		ENDC
		PUSHINT 0
		SENDRAWMSG
	}
	IFELSE
	.loc ../contracts/Game.tsol, 0
	DROP2
}
WHILE
.loc ../contracts/Game.tsol, 472
DROP
DUP2
CALLREF {
	CALL $_getCell_15debf1e_internal_macro$
}
POP S3
.loc ../contracts/Game.tsol, 473
ROT
PUSHINT 33
GETGLOBVAR
ROLL 11
XCHG S2
NEWC
STU 16
ROTREV
PUSHINT 267
DICTSETB
PUSHINT 33
SETGLOBVAR
.loc ../contracts/Game.tsol, 474
ROLL 5
PUSHINT 32
GETGLOBVAR
ROLL 9
XCHG S2
CALLREF {
	UNPAIR
	SWAP
	NEWC
	STU 64
	STDICT
}
ROTREV
PUSHINT 64
DICTUSETB
PUSHINT 32
SETGLOBVAR
.loc ../contracts/Game.tsol, 476
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHPOW2 7
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
ROLL 4
ROTREV
PAIR
BLKDROP2 5, 2
.loc ../contracts/Game.tsol, 0

.macro claim
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 484
LDU 64
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $claim_aab8ab0c_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro claim_aab8ab0c_internal_macro
.loc ../contracts/Game.tsol, 486
PUSHINT 3006
OVER
GETGLOB 26
PUSHINT 64
DICTUGET
NULLSWAPIFNOT
NIP
THROWANYIFNOT
.loc ../contracts/Game.tsol, 487
DUP
GETGLOB 26
PUSHINT 64
DICTUGETREF
PUSHCONT {
	CTOS
	CALLREF {
		LDU 64
		LDU 8
		OVER
		GTINT 4
		THROWIF 73
		LDMSGADDR
		LDU 16
		LDI 1
		LDU 64
		LDU 64
		LDI 1
		SWAP
		NULLROTRIFNOT
		PUSHCONT {
			LDU 64
		}
		IF
		LDU 128
		LDREF
		ENDS
		CTOS
		LDU 128
		LDI 1
		LDU 128
		LDU 8
		ENDS
		TUPLE 13
	}
}
PUSHCONT {
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	BLKPUSH 3, 0
	NULL
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 13
}
IFELSE
.loc ../contracts/Game.tsol, 490
PUSHINT 8002
OVER
INDEX 9
GTINT 0
THROWANYIFNOT
.loc ../contracts/Game.tsol, 493
GETPARAM 7
FIRST
OVER
INDEX 9
PUSHINT 100000000
ADD
UFITS 128
DEPTH
ADDCONST -2
PICK
ADD
UFITS 128
GREATER
THROWIFNOT 1060
.loc ../contracts/Game.tsol, 496
DUP
INDEX 9
DEPTH
ADDCONST -2
PICK
ADD
UFITS 128
PUSHINT 50000000
SUB
UFITS 128
PUSHINT 12
RAWRESERVE
.loc ../contracts/Game.tsol, 500
PUSHINT 7000
OVER
SECOND
EQINT 3
THROWANYIFNOT
.loc ../contracts/Game.tsol, 508
PUSHINT 5005
OVER
INDEX 10
NOT
THROWANYIFNOT
.loc ../contracts/Game.tsol, 511
DUP
INDEX 9
OVER
THIRD
NEWC
STSLICECONST x42_
STSLICE
SWAP
STGRAMS
PUSHINT 107
STZEROES
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/Game.tsol, 514
OVER
GETGLOB 26
DUP2
PUSHINT 64
DICTUGETREF
PUSHCONT {
	CTOS
	CALLREF {
		LDU 64
		LDU 8
		OVER
		GTINT 4
		THROWIF 73
		LDMSGADDR
		LDU 16
		LDI 1
		LDU 64
		LDU 64
		LDI 1
		SWAP
		NULLROTRIFNOT
		PUSHCONT {
			LDU 64
		}
		IF
		LDU 128
		LDREF
		ENDS
		CTOS
		LDU 128
		LDI 1
		LDU 128
		LDU 8
		ENDS
		TUPLE 13
	}
}
PUSHCONT {
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	BLKPUSH 3, 0
	NULL
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 13
}
IFELSE
TRUE
SETINDEX 10
CALLREF {
	UNTUPLE 13
	REVERSE 13, 0
	NEWC
	STU 64
	STU 8
	STSLICE
	STU 16
	STI 1
	STU 64
	STU 64
	XCPU S1, S0
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		SWAP
		STSLICECONST 1
		STU 64
	}
	IFELSE
	STU 128
	ROLLREV 4
	NEWC
	STU 128
	STI 1
	STU 128
	STU 8
	STBREFR
}
ENDC
ROTREV
PUSHINT 64
DICTUSETREF
SETGLOB 26
.loc ../contracts/Game.tsol, 516
DUP
INDEX 9
SWAP
THIRD
ROT
MYADDR
PUSHREFSLICE {
	.blob xc0000000000000000000000001
}
NEWC
STSLICE
ROLLREV 4
NEWC
STSLICECONST x3c79a4ba
STSLICE
STU 64
ROTREV
NEWC
STSLICE
STU 128
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/abstracts/Cashback.tsol, 26
GETGLOB 9
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/Game.tsol, 0

.macro getBoard
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 526
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $getBoard_3264a34b_internal_macro$
}
PUSH S3
PUSHCONT {
	PUSH S5
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 98
	STZEROES
	REVERSE 3, 1
	STSLICECONST xa3c3d216
	SWAP
	UNPAIR
	XCHG S2
	STU 16
	STU 16
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	REVERSE 3, 1
	GETGLOB 4
	INDEX 5
	STUR 32
	SWAP
	UNPAIR
	XCHG S2
	STU 16
	STU 16
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getBoard_3264a34b_internal_macro
.loc ../contracts/Game.tsol, 532
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHPOW2 7
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 27
GETGLOB 28
GETGLOB 29
.loc ../contracts/Game.tsol, 0

.macro getRoundLatestMove
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 535
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
LDU 64
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $getRoundLatestMove_b3da4359_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3263935303
	STUR 130
	XCPU S1, S0
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		SWAP
		STSLICECONST 1
		SWAP
		UNPAIR
		XCHG S2
		STU 64
		STDICT
	}
	IFELSE
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	XCPU S1, S0
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		SWAP
		STSLICECONST 1
		SWAP
		UNPAIR
		XCHG S2
		STU 64
		STDICT
	}
	IFELSE
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getRoundLatestMove_b3da4359_internal_macro
.loc ../contracts/Game.tsol, 536
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
PUSHINT 32
GETGLOBVAR
PUSHINT 64
DICTUGET
NULLSWAPIFNOT
IFREF {
	LDU 64
	LDDICT
	ENDS
	PAIR
}
.loc ../contracts/Game.tsol, 0

.macro getRound
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 539
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
LDU 64
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $getRound_144d0229_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3157020340
	STUR 130
	XCPU S1, S0
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		CALLREF {
			UNTUPLE 13
			REVERSE 13, 0
			NEWC
			STU 64
			STU 8
			STSLICE
			STU 16
			STI 1
			STU 64
			STU 64
			XCPU S1, S0
			ISNULL
			PUSHCONT {
				DROP
				STSLICECONST 0
			}
			PUSHCONT {
				SWAP
				STSLICECONST 1
				STU 64
			}
			IFELSE
			STU 128
			ROLLREV 4
			NEWC
			STU 128
			STI 1
			STU 128
			STU 8
			STBREFR
		}
		STBREFR
		STSLICECONST 1
	}
	IFELSE
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	XCPU S1, S0
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		CALLREF {
			UNTUPLE 13
			REVERSE 13, 0
			NEWC
			STU 64
			STU 8
			STSLICE
			STU 16
			STI 1
			STU 64
			STU 64
			XCPU S1, S0
			ISNULL
			PUSHCONT {
				DROP
				STSLICECONST 0
			}
			PUSHCONT {
				SWAP
				STSLICECONST 1
				STU 64
			}
			IFELSE
			STU 128
			ROLLREV 4
			NEWC
			STU 128
			STI 1
			STU 128
			STU 8
			STBREFR
		}
		STBREFR
		STSLICECONST 1
	}
	IFELSE
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getRound_144d0229_internal_macro
.loc ../contracts/Game.tsol, 540
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 26
PUSHINT 64
DICTUGETREF
NULLSWAPIFNOT
IFREF {
	CTOS
	CALLREF {
		LDU 64
		LDU 8
		OVER
		GTINT 4
		THROWIF 73
		LDMSGADDR
		LDU 16
		LDI 1
		LDU 64
		LDU 64
		LDI 1
		SWAP
		NULLROTRIFNOT
		PUSHCONT {
			LDU 64
		}
		IF
		LDU 128
		LDREF
		ENDS
		CTOS
		LDU 128
		LDI 1
		LDU 128
		LDU 8
		ENDS
		TUPLE 13
	}
}
.loc ../contracts/Game.tsol, 0

.macro getRounds
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 543
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
OVER
PUSHCONT {
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDU 8
	}
	IF
}
PUSHCONT {
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDU 8
	}
	IF
}
IFELSE
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $getRounds_f8c68c7b_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2587913902
	STUR 130
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getRounds_f8c68c7b_internal_macro
.loc ../contracts/Game.tsol, 544
DUP
ISNULL
PUSHCONT {
	GETGLOB 4
	PUSHINT 0
	SETINDEXQ 2
	PUSHINT 64
	SETINDEXQ 4
	FALSE
	SETINDEXQ 1
	SETGLOB 4
	PUSHINT 0
	NEWDICT
	PAIR
	GETGLOB 26
	DUP
	PUSHINT 64
	DICTUMINREF
	NULLSWAPIFNOT
	IFREF {
		SWAP
		CTOS
		CALLREF {
			LDU 64
			LDU 8
			OVER
			GTINT 4
			THROWIF 73
			LDMSGADDR
			LDU 16
			LDI 1
			LDU 64
			LDU 64
			LDI 1
			SWAP
			NULLROTRIFNOT
			PUSHCONT {
				LDU 64
			}
			IF
			LDU 128
			LDREF
			ENDS
			CTOS
			LDU 128
			LDI 1
			LDU 128
			LDU 8
			ENDS
			TUPLE 13
		}
		PAIR
	}
	PUSHCONT {
		DUP
		ISNULL
		NOT
	}
	PUSHCONT {
		PUSH2 S2, S0
		SECOND
		CALLREF {
			UNTUPLE 13
			REVERSE 13, 0
			NEWC
			STU 64
			STU 8
			STSLICE
			STU 16
			STI 1
			STU 64
			STU 64
			XCPU S1, S0
			ISNULL
			PUSHCONT {
				DROP
				STSLICECONST 0
			}
			PUSHCONT {
				SWAP
				STSLICECONST 1
				STU 64
			}
			IFELSE
			STU 128
			ROLLREV 4
			NEWC
			STU 128
			STI 1
			STU 128
			STU 8
			STBREFR
		}
		ENDC
		SWAP
		UNPAIR
		OVER
		INC
		ROLLREV 3
		PUSHINT 32
		DICTUSETREF
		PAIR
		POP S3
		FIRST
		OVER
		PUSHINT 64
		DICTUGETNEXT
		NULLSWAPIFNOT
		IFREF {
			SWAP
			PLDREF
			CTOS
			CALLREF {
				LDU 64
				LDU 8
				OVER
				GTINT 4
				THROWIF 73
				LDMSGADDR
				LDU 16
				LDI 1
				LDU 64
				LDU 64
				LDI 1
				SWAP
				NULLROTRIFNOT
				PUSHCONT {
					LDU 64
				}
				IF
				LDU 128
				LDREF
				ENDS
				CTOS
				LDU 128
				LDI 1
				LDU 128
				LDU 8
				ENDS
				TUPLE 13
			}
			PAIR
		}
	}
	WHILE
	DROP2
	NIP
}
IFJMP
.loc ../contracts/Game.tsol, 546
PUSHINT 0
NEWDICT
PAIR
.loc ../contracts/Game.tsol, 547
XCPU S1, S0
ISNULL
THROWIF 63
.loc ../contracts/Game.tsol, 548
PUSHINT 0
NEWDICT
PAIR
GETGLOB 26
DUP
PUSHINT 64
DICTUMINREF
NULLSWAPIFNOT
IFREF {
	SWAP
	CTOS
	CALLREF {
		LDU 64
		LDU 8
		OVER
		GTINT 4
		THROWIF 73
		LDMSGADDR
		LDU 16
		LDI 1
		LDU 64
		LDU 64
		LDI 1
		SWAP
		NULLROTRIFNOT
		PUSHCONT {
			LDU 64
		}
		IF
		LDU 128
		LDREF
		ENDS
		CTOS
		LDU 128
		LDI 1
		LDU 128
		LDU 8
		ENDS
		TUPLE 13
	}
	PAIR
}
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	PUSH2 S2, S0
	SECOND
	CALLREF {
		UNTUPLE 13
		REVERSE 13, 0
		NEWC
		STU 64
		STU 8
		STSLICE
		STU 16
		STI 1
		STU 64
		STU 64
		XCPU S1, S0
		ISNULL
		PUSHCONT {
			DROP
			STSLICECONST 0
		}
		PUSHCONT {
			SWAP
			STSLICECONST 1
			STU 64
		}
		IFELSE
		STU 128
		ROLLREV 4
		NEWC
		STU 128
		STI 1
		STU 128
		STU 8
		STBREFR
	}
	ENDC
	SWAP
	UNPAIR
	OVER
	INC
	ROLLREV 3
	PUSHINT 32
	DICTUSETREF
	PAIR
	POP S3
	FIRST
	OVER
	PUSHINT 64
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		PLDREF
		CTOS
		CALLREF {
			LDU 64
			LDU 8
			OVER
			GTINT 4
			THROWIF 73
			LDMSGADDR
			LDU 16
			LDI 1
			LDU 64
			LDU 64
			LDI 1
			SWAP
			NULLROTRIFNOT
			PUSHCONT {
				LDU 64
			}
			IF
			LDU 128
			LDREF
			ENDS
			CTOS
			LDU 128
			LDI 1
			LDU 128
			LDU 8
			ENDS
			TUPLE 13
		}
		PAIR
	}
}
WHILE
DROP2
SECOND
PUSHINT 0
NULL
PUSHCONT {
	PUSH2 S1, S2
	PUSHINT 32
	DICTUGETREF
	NULLSWAPIFNOT
	IFREF {
		CTOS
		CALLREF {
			LDU 64
			LDU 8
			OVER
			GTINT 4
			THROWIF 73
			LDMSGADDR
			LDU 16
			LDI 1
			LDU 64
			LDU 64
			LDI 1
			SWAP
			NULLROTRIFNOT
			PUSHCONT {
				LDU 64
			}
			IF
			LDU 128
			LDREF
			ENDS
			CTOS
			LDU 128
			LDI 1
			LDU 128
			LDU 8
			ENDS
			TUPLE 13
		}
	}
	DUP
	POP S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 549
	DUP
	SECOND
	PUSH S4
	EQUAL
	PUSHCONT {
		.loc ../contracts/Game.tsol, 549
		PUSH2 S4, S0
		CALLREF {
			UNTUPLE 13
			REVERSE 13, 0
			NEWC
			STU 64
			STU 8
			STSLICE
			STU 16
			STI 1
			STU 64
			STU 64
			XCPU S1, S0
			ISNULL
			PUSHCONT {
				DROP
				STSLICECONST 0
			}
			PUSHCONT {
				SWAP
				STSLICECONST 1
				STU 64
			}
			IFELSE
			STU 128
			ROLLREV 4
			NEWC
			STU 128
			STI 1
			STU 128
			STU 8
			STBREFR
		}
		ENDC
		SWAP
		UNPAIR
		OVER
		INC
		ROLLREV 3
		PUSHINT 32
		DICTUSETREF
		PAIR
		POP S5
		.loc ../contracts/Game.tsol, 0
	}
	IF
	.loc ../contracts/Game.tsol, 0
	OVER
	INC
	POP S2
}
WHILE
BLKDROP 4
.loc ../contracts/Game.tsol, 552
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
.loc ../contracts/Game.tsol, 0

.globl	_checkContinuation_c7dec94d_internal
.type	_checkContinuation_c7dec94d_internal, @function
CALL $_checkContinuation_c7dec94d_internal_macro$

.macro _checkContinuation_c7dec94d_internal_macro
.loc ../contracts/Game.tsol, 556
DUP2
.loc ../contracts/Game.tsol, 559
GETGLOB 28
SECOND
PUSHINT 0
NULL
PUSHCONT {
	PUSH2 S1, S2
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	IFREF {
		LDU 16
		LDU 16
		ROTREV
		PAIR
		SWAP
		LDU 16
		LDU 16
		ROTREV
		PAIR
		SWAP
		LDU 8
		OVER
		GTINT 1
		THROWIF 73
		ENDS
		TRIPLE
	}
	DUP
	POP S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 560
	DUP
	INDEX2 0, 0
	PUSH S7
	EQUAL
	OVER
	INDEX2 0, 1
	PUSH S7
	EQUAL
	AND
	PUSHCONT {
		.loc ../contracts/Game.tsol, 561
		DUP
		INDEX2 1, 0
		POP S5
		.loc ../contracts/Game.tsol, 562
		DUP
		INDEX2 1, 1
		POP S4
		.loc ../contracts/Game.tsol, 564
		PUSH2 S0, S7
		PUSHSLICE xc00000000000000000000000007fe4fb23
		NEWC
		STSLICE
		STSLICE
		SWAP
		UNTRIPLE
		REVERSE 4, 0
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		STU 8
		ENDC
		PUSHINT 0
		SENDRAWMSG
		.loc ../contracts/Game.tsol, 0
	}
	IF
	.loc ../contracts/Game.tsol, 0
	OVER
	INC
	POP S2
}
WHILE
BLKDROP 3
.loc ../contracts/Game.tsol, 568
GETGLOB 29
SECOND
PUSHINT 0
NULL
PUSHCONT {
	PUSH2 S1, S2
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	IFREF {
		LDU 16
		LDU 16
		ROTREV
		PAIR
		SWAP
		LDU 16
		LDU 16
		ROTREV
		PAIR
		SWAP
		LDU 8
		OVER
		GTINT 1
		THROWIF 73
		ENDS
		TRIPLE
	}
	DUP
	POP S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 569
	DUP
	INDEX2 0, 0
	PUSH S7
	EQUAL
	OVER
	INDEX2 0, 1
	PUSH S7
	EQUAL
	AND
	PUSHCONT {
		.loc ../contracts/Game.tsol, 570
		DUP
		INDEX2 1, 0
		POP S5
		.loc ../contracts/Game.tsol, 571
		DUP
		INDEX2 1, 1
		POP S4
		.loc ../contracts/Game.tsol, 573
		PUSH2 S0, S7
		PUSHSLICE xc00000000000000000000000007fe4fb23
		NEWC
		STSLICE
		STSLICE
		SWAP
		UNTRIPLE
		REVERSE 4, 0
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		SWAP
		UNPAIR
		XCHG S2
		STU 16
		STU 16
		STU 8
		ENDC
		PUSHINT 0
		SENDRAWMSG
		.loc ../contracts/Game.tsol, 0
	}
	IF
	.loc ../contracts/Game.tsol, 0
	OVER
	INC
	POP S2
}
WHILE
BLKDROP 3
.loc ../contracts/Game.tsol, 577
BLKDROP2 3, 2
.loc ../contracts/Game.tsol, 0

.globl	_getCell_15debf1e_internal
.type	_getCell_15debf1e_internal, @function
CALL $_getCell_15debf1e_internal_macro$

.macro _getCell_15debf1e_internal_macro
.loc ../contracts/Game.tsol, 581
DUP
MODPOW2 1
PUSHCONT {
	.loc ../contracts/Game.tsol, 582
	GETGLOB 27
	FIRST
	PUSH S2
	SUB
	UFITS 16
	INC
	UFITS 16
	POP S2
	.loc ../contracts/Game.tsol, 0
}
IFNOT
.loc ../contracts/Game.tsol, 583
DEC
UFITS 16
GETGLOB 27
FIRST
MUL
UFITS 16
ADD
UFITS 16
.loc ../contracts/Game.tsol, 0

.globl	_getCoordinate_3e662623_internal
.type	_getCoordinate_3e662623_internal, @function
CALL $_getCoordinate_3e662623_internal_macro$

.macro _getCoordinate_3e662623_internal_macro
.loc ../contracts/Game.tsol, 587
DUP
PUSHCONT {
	PUSHINT 0
	DUP
	PAIR
	NIP
}
IFNOTJMP
.loc ../contracts/Game.tsol, 589
DUP
DEC
UFITS 16
GETGLOB 27
FIRST
DIV
INC
UFITS 16
.loc ../contracts/Game.tsol, 590
TUCK
DEC
UFITS 16
GETGLOB 27
FIRST
MUL
UFITS 16
SUB
UFITS 16
.loc ../contracts/Game.tsol, 592
OVER
MODPOW2 1
PUSHCONT {
	.loc ../contracts/Game.tsol, 594
	GETGLOB 27
	FIRST
	SUBR
	UFITS 16
	INC
	UFITS 16
	.loc ../contracts/Game.tsol, 0
}
IFNOT
.loc ../contracts/Game.tsol, 597
SWAP
PAIR
.loc ../contracts/Game.tsol, 0

.globl	_getPath_1d89c499_internal
.type	_getPath_1d89c499_internal, @function
CALL $_getPath_1d89c499_internal_macro$

.macro _getPath_1d89c499_internal_macro
.loc ../contracts/Game.tsol, 601
PUSHINT 0
DUP
PAIR
DUP
.loc ../contracts/Game.tsol, 604
PUSHINT 0
BLKPUSH 2, 0
.loc ../contracts/Game.tsol, 608
PUSHCONT {
	DUP
	NOT
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 609
	GETGLOB 27
	FIRST
	RAND
	INC
	UFITS 16
	PUXC S5, S-1
	SETINDEX 0
	POP S5
	.loc ../contracts/Game.tsol, 610
	GETGLOB 27
	SECOND
	DEC
	UFITS 16
	RAND
	ADDCONST 2
	UFITS 16
	PUXC S5, S-1
	SETINDEX 1
	POP S5
	.loc ../contracts/Game.tsol, 611
	PUSH S4
	FIRST
	PUSH S5
	SECOND
	CALLREF {
		CALL $_getCell_15debf1e_internal_macro$
	}
	POP S3
	.loc ../contracts/Game.tsol, 613
	PUSH S4
	SECOND
	GETGLOB 27
	SECOND
	EQUAL
	PUSH S5
	FIRST
	EQINT 1
	AND
	NOT
	DUP
	PUSHCONT {
		DROP
		PUSH S2
		PUSHINT 34
		GETGLOBVAR
		PUSHINT 16
		DICTUGET
		NULLSWAPIFNOT
		PUSHCONT {
			LDI 1
			SWAP
			NULLSWAPIFNOT
			PUSHCONT {
				LDU 16
				LDU 16
				ROTREV
				PAIR
				SWAP
				LDU 16
				LDU 16
				ROTREV
				PAIR
				SWAP
				LDU 8
				ROLLREV 3
				TRIPLE
			}
			IF
			NIP
		}
		IF
		ISNULL
	}
	IF
	NIP
	.loc ../contracts/Game.tsol, 0
}
WHILE
.loc ../contracts/Game.tsol, 617
DROP
FALSE
.loc ../contracts/Game.tsol, 618
PUSHCONT {
	DUP
	NOT
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 619
	GETGLOB 27
	FIRST
	RAND
	INC
	UFITS 16
	PUXC S4, S-1
	SETINDEX 0
	POP S4
	.loc ../contracts/Game.tsol, 620
	PUSH S4
	SECOND
	ADDCONST -2
	UFITS 16
	RAND
	INC
	UFITS 16
	PUXC S4, S-1
	SETINDEX 1
	POP S4
	.loc ../contracts/Game.tsol, 621
	PUSH S3
	FIRST
	PUSH S4
	SECOND
	CALLREF {
		CALL $_getCell_15debf1e_internal_macro$
	}
	POP S2
	.loc ../contracts/Game.tsol, 622
	OVER
	PUSHINT 34
	GETGLOBVAR
	PUSHINT 16
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		LDI 1
		SWAP
		NULLSWAPIFNOT
		PUSHCONT {
			LDU 16
			LDU 16
			ROTREV
			PAIR
			SWAP
			LDU 16
			LDU 16
			ROTREV
			PAIR
			SWAP
			LDU 8
			ROLLREV 3
			TRIPLE
		}
		IF
		NIP
	}
	IF
	ISNULL
	NIP
	.loc ../contracts/Game.tsol, 624
	PUSH S5
	EQINT 1
	PUSHCONT {
		.loc ../contracts/Game.tsol, 625
		OVER
		NEQINT 1
		AND
		.loc ../contracts/Game.tsol, 0
	}
	IF
	.loc ../contracts/Game.tsol, 0
}
WHILE
.loc ../contracts/Game.tsol, 629
BLKDROP 3
PUSHINT 0
DUP
PAIR
DUP
PUSHINT 0
TRIPLE
.loc ../contracts/Game.tsol, 630
PUSH S3
PUSHCONT {
	.loc ../contracts/Game.tsol, 633
	PUSH3 S1, S2, S3
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 631
	BLKPUSH 2, 2
	PUSH S5
}
IFELSE
TRIPLE
BLKDROP2 4, 1
.loc ../contracts/Game.tsol, 0

.globl	_checkBoardInitialized_225232b5_internal
.type	_checkBoardInitialized_225232b5_internal, @function
CALL $_checkBoardInitialized_225232b5_internal_macro$

.macro _checkBoardInitialized_225232b5_internal_macro
.loc ../contracts/Game.tsol, 640
GETGLOB 28
FIRST
GETGLOB 15
EQUAL
GETGLOB 29
FIRST
GETGLOB 14
EQUAL
AND
PUSHCONT {
	.loc ../contracts/Game.tsol, 641
	TRUE
	SETGLOB 16
	.loc ../contracts/Game.tsol, 642
	GETGLOB 29
	GETGLOB 28
	GETGLOB 27
	PUSHSLICE xc00000000000000000000000002602795b
	NEWC
	STSLICE
	SWAP
	UNPAIR
	XCHG S2
	STU 16
	STU 16
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/Game.tsol, 0
}
IF
.loc ../contracts/Game.tsol, 0

.macro getRoundReserves
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 652
LDU 64
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $getRoundReserves_9cfc51ea_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2921811578
	STUR 130
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	getRoundReserves_9cfc51ea_internal
.type	getRoundReserves_9cfc51ea_internal, @function
CALL $getRoundReserves_9cfc51ea_internal_macro$

.macro getRoundReserves_9cfc51ea_internal_macro
.loc ../contracts/Game.tsol, 652
PUSHINT 0
.loc ../contracts/Game.tsol, 653
PUSHINT 3006
PUSH S2
GETGLOB 26
PUSHINT 64
DICTUGET
NULLSWAPIFNOT
NIP
THROWANYIFNOT
.loc ../contracts/Game.tsol, 654
PUSHINT 3006
PUSH S2
PUSHINT 35
GETGLOBVAR
THIRD
PUSHINT 64
DICTUGET
NULLSWAPIFNOT
NIP
THROWANYIFNOT
.loc ../contracts/Game.tsol, 656
SWAP
PUSHINT 35
GETGLOBVAR
THIRD
PUSHINT 64
DICTUGET
IFREFELSEREF
{
	LDU 128
	LDU 128
	LDDICT
	ENDS
	TRIPLE
}
{
	PUSHINT 0
	DUP
	NEWDICT
	TRIPLE
}
.loc ../contracts/Game.tsol, 657
DUP
SECOND
OVER
FIRST
ADD
UFITS 128
POP S2
.loc ../contracts/Game.tsol, 658
THIRD
DUP
PUSHINT 267
DICTMIN
PUSHCONT {
	DUP
	ROT
	PLDU 128
}
PUSHCONT {
	NULL
	BLKPUSH 2, 0
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 659
	PUSH2 S4, S0
	ADD
	UFITS 128
	POP S5
	.loc ../contracts/Game.tsol, 0
	PUSH2 S2, S3
	PUSHINT 267
	DICTGETNEXT
	PUSHCONT {
		DUP
		ROT
		PLDU 128
	}
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILE
BLKDROP 4
.loc ../contracts/Game.tsol, 0

.macro getBoardReserves
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/Game.tsol, 670
ENDS
.loc ../contracts/Game.tsol, 0
CALLREF {
	CALL $getBoardReserves_01cc1250_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2456888208
	STUR 130
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	getBoardReserves_01cc1250_internal
.type	getBoardReserves_01cc1250_internal, @function
CALL $getBoardReserves_01cc1250_internal_macro$

.macro getBoardReserves_01cc1250_internal_macro
.loc ../contracts/Game.tsol, 671
PUSHINT 35
GETGLOBVAR
SECOND
PUSHINT 35
GETGLOBVAR
FIRST
ADD
UFITS 128
.loc ../contracts/Game.tsol, 673
PUSHINT 35
GETGLOBVAR
THIRD
DUP
PUSHINT 64
DICTUMIN
PUSHCONT {
	NULL
	BLKPUSH 2, 0
}
IFREFELSE {
	DUP
	ROT
	LDU 128
	LDU 128
	LDDICT
	ENDS
	TRIPLE
}
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 674
	DROP
	CALLREF {
		CALL $getRoundReserves_9cfc51ea_internal_macro$
	}
	.loc ../contracts/Game.tsol, 675
	PUSH S3
	ADD
	UFITS 128
	POP S3
	.loc ../contracts/Game.tsol, 0
	PUSH2 S0, S1
	PUSHINT 64
	DICTUGETNEXT
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		ROT
		LDU 128
		LDU 128
		LDDICT
		ENDS
		TRIPLE
}
	BLKDROP2 1, 3
}
WHILE
BLKDROP 4
.loc ../contracts/Game.tsol, 0

.globl	_tryStartRound_153a7d5b_internal
.type	_tryStartRound_153a7d5b_internal, @function
CALL $_tryStartRound_153a7d5b_internal_macro$

.macro _tryStartRound_153a7d5b_internal_macro
.loc ../contracts/Game.tsol, 687
PUSHINT 3006
OVER
GETGLOB 26
PUSHINT 64
DICTUGET
NULLSWAPIFNOT
NIP
THROWANYIFNOT
.loc ../contracts/Game.tsol, 689
DUP
GETGLOB 26
PUSHINT 64
DICTUGETREF
PUSHCONT {
	CTOS
	CALLREF {
		LDU 64
		LDU 8
		OVER
		GTINT 4
		THROWIF 73
		LDMSGADDR
		LDU 16
		LDI 1
		LDU 64
		LDU 64
		LDI 1
		SWAP
		NULLROTRIFNOT
		PUSHCONT {
			LDU 64
		}
		IF
		LDU 128
		LDREF
		ENDS
		CTOS
		LDU 128
		LDI 1
		LDU 128
		LDU 8
		ENDS
		TUPLE 13
	}
}
PUSHCONT {
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	BLKPUSH 3, 0
	NULL
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 13
}
IFELSE
.loc ../contracts/Game.tsol, 692
DUP
SECOND
GTINT 0
PUSHCONT {
	DROP2
}
IFJMP
.loc ../contracts/Game.tsol, 695
OVER
GETGLOB 31
PUSHINT 64
DICTUGET
NULLSWAPIFNOT
NIP
PUSHCONT {
	DROP2
}
IFNOTJMP
.loc ../contracts/Game.tsol, 698
OVER
GETGLOB 31
PUSHINT 64
DICTUGET
PUSHCONT {
	LDU 32
	PLDDICT
}
PUSHCONT {
	PUSHINT 0
	NEWDICT
}
IFELSE
PAIR
FIRST
LESSINT 2
PUSHCONT {
	DROP2
}
IFJMP
.loc ../contracts/Game.tsol, 700
FALSE ; decl return flag
PUSH S2
GETGLOB 31
PUSHINT 64
DICTUGET
PUSHCONT {
	LDU 32
	PLDDICT
}
PUSHCONT {
	PUSHINT 0
	NEWDICT
}
IFELSE
PAIR
FIRST
PUSH S2
INDEX 3
LESS
PUSHCONT {
	.loc ../contracts/Game.tsol, 701
	FALSE ; decl return flag
	PUSH S2
	INDEX 7
	ISNULL
	PUSHCONT {
		.loc ../contracts/Game.tsol, 702
		FALSE ; decl return flag
		PUSH S3
		INDEX 7
		DUP
		ISNULL
		THROWIF 63
		BLOCKLT
		GREATER
		PUSHCONT {
			.loc ../contracts/Game.tsol, 703
			BLKDROP 5
			PUSHINT 4
		}
		PUSHCONT {
			.loc ../contracts/Game.tsol, 705
			PUSH S4
			GETGLOB 26
			DUP2
			PUSHINT 64
			DICTUGETREF
			PUSHCONT {
				CTOS
				CALLREF {
					LDU 64
					LDU 8
					OVER
					GTINT 4
					THROWIF 73
					LDMSGADDR
					LDU 16
					LDI 1
					LDU 64
					LDU 64
					LDI 1
					SWAP
					NULLROTRIFNOT
					PUSHCONT {
						LDU 64
					}
					IF
					LDU 128
					LDREF
					ENDS
					CTOS
					LDU 128
					LDI 1
					LDU 128
					LDU 8
					ENDS
					TUPLE 13
				}
			}
			PUSHCONT {
				PUSHINT 0
				DUP
				PUSHREFSLICE {
					.blob x8000000000000000000000000000000000000000000000000000000000000000001_
				}
				PUSHINT 0
				BLKPUSH 3, 0
				NULL
				PUSHINT 0
				BLKPUSH 4, 0
				TUPLE 13
			}
			IFELSE
			PUSHINT 1
			SETINDEX 1
			CALLREF {
				UNTUPLE 13
				REVERSE 13, 0
				NEWC
				STU 64
				STU 8
				STSLICE
				STU 16
				STI 1
				STU 64
				STU 64
				XCPU S1, S0
				ISNULL
				PUSHCONT {
					DROP
					STSLICECONST 0
				}
				PUSHCONT {
					SWAP
					STSLICECONST 1
					STU 64
				}
				IFELSE
				STU 128
				ROLLREV 4
				NEWC
				STU 128
				STI 1
				STU 128
				STU 8
				STBREFR
			}
			ENDC
			ROTREV
			PUSHINT 64
			DICTUSETREF
			SETGLOB 26
		}
		IFELSE
		.loc ../contracts/Game.tsol, 0
		DUP
		IFRET
		DROP
	}
	IFNOT
	.loc ../contracts/Game.tsol, 0
	DUP
	IFRET
	DROP
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 709
	PUSH S2
	GETGLOB 26
	DUP2
	PUSHINT 64
	DICTUGETREF
	PUSHCONT {
		CTOS
		CALLREF {
			LDU 64
			LDU 8
			OVER
			GTINT 4
			THROWIF 73
			LDMSGADDR
			LDU 16
			LDI 1
			LDU 64
			LDU 64
			LDI 1
			SWAP
			NULLROTRIFNOT
			PUSHCONT {
				LDU 64
			}
			IF
			LDU 128
			LDREF
			ENDS
			CTOS
			LDU 128
			LDI 1
			LDU 128
			LDU 8
			ENDS
			TUPLE 13
		}
	}
	PUSHCONT {
		PUSHINT 0
		DUP
		PUSHREFSLICE {
			.blob x8000000000000000000000000000000000000000000000000000000000000000001_
		}
		PUSHINT 0
		BLKPUSH 3, 0
		NULL
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 13
	}
	IFELSE
	PUSHINT 1
	SETINDEX 1
	CALLREF {
		UNTUPLE 13
		REVERSE 13, 0
		NEWC
		STU 64
		STU 8
		STSLICE
		STU 16
		STI 1
		STU 64
		STU 64
		XCPU S1, S0
		ISNULL
		PUSHCONT {
			DROP
			STSLICECONST 0
		}
		PUSHCONT {
			SWAP
			STSLICECONST 1
			STU 64
		}
		IFELSE
		STU 128
		ROLLREV 4
		NEWC
		STU 128
		STI 1
		STU 128
		STU 8
		STBREFR
	}
	ENDC
	ROTREV
	PUSHINT 64
	DICTUSETREF
	SETGLOB 26
	.loc ../contracts/Game.tsol, 0
}
IFELSE
IFRET
DROP2
.loc ../contracts/Game.tsol, 0

.globl	_removePlayerFromRound_9d13712b_internal
.type	_removePlayerFromRound_9d13712b_internal, @function
CALL $_removePlayerFromRound_9d13712b_internal_macro$

.macro _removePlayerFromRound_9d13712b_internal_macro
.loc ../contracts/Game.tsol, 720
PUSHINT 3006
PUSH S2
GETGLOB 26
PUSHINT 64
DICTUGET
NULLSWAPIFNOT
NIP
THROWANYIFNOT
.loc ../contracts/Game.tsol, 721
PUSHINT 3006
PUSH S2
GETGLOB 31
PUSHINT 64
DICTUGET
NULLSWAPIFNOT
NIP
THROWANYIFNOT
.loc ../contracts/Game.tsol, 724
DUP
GETGLOB 30
PUSHINT 267
DICTGET
NULLSWAPIFNOT
NIP
PUSHCONT {
	.loc ../contracts/Game.tsol, 724
	DUP
	GETGLOB 30
	PUSHINT 267
	DICTDEL
	DROP
	SETGLOB 30
	.loc ../contracts/Game.tsol, 0
}
IF
.loc ../contracts/Game.tsol, 727
DUP
PUSHINT 33
GETGLOBVAR
PUSHINT 267
DICTGET
NULLSWAPIFNOT
NIP
PUSHCONT {
	.loc ../contracts/Game.tsol, 727
	DUP
	PUSHINT 33
	GETGLOBVAR
	PUSHINT 267
	DICTDEL
	DROP
	PUSHINT 33
	SETGLOBVAR
	.loc ../contracts/Game.tsol, 0
}
IF
.loc ../contracts/Game.tsol, 730
PUSHINT 0
NEWDICT
PAIR
.loc ../contracts/Game.tsol, 732
PUSH S2
GETGLOB 31
PUSHINT 64
DICTUGET
PUSHCONT {
	LDU 32
	PLDDICT
}
PUSHCONT {
	PUSHINT 0
	NEWDICT
}
IFELSE
PAIR
SECOND
PUSHINT 0
NULL
PUSHCONT {
	PUSH2 S1, S2
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	DROP
	DUP
	POP S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc ../contracts/Game.tsol, 733
	PUSH2 S0, S4
	SDEQ
	PUSHCONT {
		.loc ../contracts/Game.tsol, 733
		PUSH2 S0, S3
		UNPAIR
		OVER
		INC
		ROLLREV 3
		PUSHINT 32
		DICTUSET
		PAIR
		POP S4
		.loc ../contracts/Game.tsol, 0
	}
	IFNOT
	.loc ../contracts/Game.tsol, 0
	OVER
	INC
	POP S2
}
WHILE
BLKDROP 3
.loc ../contracts/Game.tsol, 736
PUSH S2
GETGLOB 31
NEWC
PUSH S3
UNPAIR
XCHG S2
STU 32
STDICT
ROTREV
PUSHINT 64
DICTUSETB
SETGLOB 31
.loc ../contracts/Game.tsol, 739
DUP
FIRST
EQINT 1
PUSHCONT {
	.loc ../contracts/Game.tsol, 740
	PUSHINT 0
	OVER
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PUSH S3
	GETGLOB 26
	DUP2
	PUSHINT 64
	DICTUGETREF
	PUSHCONT {
		CTOS
		CALLREF {
			LDU 64
			LDU 8
			OVER
			GTINT 4
			THROWIF 73
			LDMSGADDR
			LDU 16
			LDI 1
			LDU 64
			LDU 64
			LDI 1
			SWAP
			NULLROTRIFNOT
			PUSHCONT {
				LDU 64
			}
			IF
			LDU 128
			LDREF
			ENDS
			CTOS
			LDU 128
			LDI 1
			LDU 128
			LDU 8
			ENDS
			TUPLE 13
		}
	}
	PUSHCONT {
		PUSHINT 0
		DUP
		PUSHREFSLICE {
			.blob x8000000000000000000000000000000000000000000000000000000000000000001_
		}
		PUSHINT 0
		BLKPUSH 3, 0
		NULL
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 13
	}
	IFELSE
	ROLL 3
	SETINDEX 2
	CALLREF {
		UNTUPLE 13
		REVERSE 13, 0
		NEWC
		STU 64
		STU 8
		STSLICE
		STU 16
		STI 1
		STU 64
		STU 64
		XCPU S1, S0
		ISNULL
		PUSHCONT {
			DROP
			STSLICECONST 0
		}
		PUSHCONT {
			SWAP
			STSLICECONST 1
			STU 64
		}
		IFELSE
		STU 128
		ROLLREV 4
		NEWC
		STU 128
		STI 1
		STU 128
		STU 8
		STBREFR
	}
	ENDC
	ROTREV
	PUSHINT 64
	DICTUSETREF
	DUP
	SETGLOB 26
	.loc ../contracts/Game.tsol, 741
	PUXC S3, S-1
	DUP2
	PUSHINT 64
	DICTUGETREF
	PUSHCONT {
		CTOS
		CALLREF {
			LDU 64
			LDU 8
			OVER
			GTINT 4
			THROWIF 73
			LDMSGADDR
			LDU 16
			LDI 1
			LDU 64
			LDU 64
			LDI 1
			SWAP
			NULLROTRIFNOT
			PUSHCONT {
				LDU 64
			}
			IF
			LDU 128
			LDREF
			ENDS
			CTOS
			LDU 128
			LDI 1
			LDU 128
			LDU 8
			ENDS
			TUPLE 13
		}
	}
	PUSHCONT {
		PUSHINT 0
		DUP
		PUSHREFSLICE {
			.blob x8000000000000000000000000000000000000000000000000000000000000000001_
		}
		PUSHINT 0
		BLKPUSH 3, 0
		NULL
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 13
	}
	IFELSE
	PUSHINT 3
	SETINDEX 1
	CALLREF {
		UNTUPLE 13
		REVERSE 13, 0
		NEWC
		STU 64
		STU 8
		STSLICE
		STU 16
		STI 1
		STU 64
		STU 64
		XCPU S1, S0
		ISNULL
		PUSHCONT {
			DROP
			STSLICECONST 0
		}
		PUSHCONT {
			SWAP
			STSLICECONST 1
			STU 64
		}
		IFELSE
		STU 128
		ROLLREV 4
		NEWC
		STU 128
		STI 1
		STU 128
		STU 8
		STBREFR
	}
	ENDC
	ROTREV
	PUSHINT 64
	DICTUSETREF
	SETGLOB 26
	.loc ../contracts/Game.tsol, 0
}
IF
.loc ../contracts/Game.tsol, 745
DROP
OVER
GETGLOB 26
DUP2
PUSHINT 64
DICTUGETREF
PUSHCONT {
	CTOS
	CALLREF {
		LDU 64
		LDU 8
		OVER
		GTINT 4
		THROWIF 73
		LDMSGADDR
		LDU 16
		LDI 1
		LDU 64
		LDU 64
		LDI 1
		SWAP
		NULLROTRIFNOT
		PUSHCONT {
			LDU 64
		}
		IF
		LDU 128
		LDREF
		ENDS
		CTOS
		LDU 128
		LDI 1
		LDU 128
		LDU 8
		ENDS
		TUPLE 13
	}
}
PUSHCONT {
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	BLKPUSH 3, 0
	NULL
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 13
}
IFELSE
DUP
INDEX 3
DEC
UFITS 16
SETINDEX 3
CALLREF {
	UNTUPLE 13
	REVERSE 13, 0
	NEWC
	STU 64
	STU 8
	STSLICE
	STU 16
	STI 1
	STU 64
	STU 64
	XCPU S1, S0
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		SWAP
		STSLICECONST 1
		STU 64
	}
	IFELSE
	STU 128
	ROLLREV 4
	NEWC
	STU 128
	STI 1
	STU 128
	STU 8
	STBREFR
}
ENDC
ROTREV
PUSHINT 64
DICTUSETREF
SETGLOB 26
.loc ../contracts/Game.tsol, 748
OVER
PUSHINT 35
GETGLOBVAR
THIRD
PUSHINT 64
DICTUGET
NULLSWAPIFNOT
IFREF {
	LDU 128
	LDU 128
	LDDICT
	ENDS
	TRIPLE
}
.loc ../contracts/Game.tsol, 749
DUP
ISNULL
PUSHCONT {
	BLKDROP 3
}
IFJMP
.loc ../contracts/Game.tsol, 751
DUP
ISNULL
THROWIF 63
.loc ../contracts/Game.tsol, 752
DUP2
THIRD
PUSHINT 267
DICTGET
NULLSWAPIFNOT
NIP
PUSHCONT {
	BLKDROP 3
}
IFNOTJMP
.loc ../contracts/Game.tsol, 755
DUP2
THIRD
PUSHINT 267
DICTGET
ZEROSWAPIFNOT
PUSHCONT {
	PLDU 128
}
IF
.loc ../contracts/Game.tsol, 756
DUP
GTINT 0
PUSHCONT {
	.loc ../contracts/Game.tsol, 757
	PUSH2 S0, S2
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 107
	STZEROES
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/Game.tsol, 758
	PUSH3 S0, S2, S3
	MYADDR
	PUSHREFSLICE {
		.blob xc0000000000000000000000001
	}
	NEWC
	STSLICE
	ROLLREV 4
	NEWC
	STSLICECONST x3be1a22e
	STSLICE
	STU 64
	ROTREV
	NEWC
	STSLICE
	STU 128
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/Game.tsol, 0
}
IF
.loc ../contracts/Game.tsol, 761
DROP
DUP
THIRD
XCHG S1, S2
PUSHINT 267
DICTDEL
DROP
SETINDEX 2
.loc ../contracts/Game.tsol, 0
DROP2

.globl	_initOwnable_d61cdbc5_internal
.type	_initOwnable_d61cdbc5_internal, @function
CALL $_initOwnable_d61cdbc5_internal_macro$

.macro _initOwnable_d61cdbc5_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 17
DUP
MYADDR
SDEQ
THROWIF 1007
.loc ../contracts/abstracts/Ownable.tsol, 18
GETGLOB 11
PUSHCONT {
	DROP
}
IFJMP
.loc ../contracts/abstracts/Ownable.tsol, 20
DUP
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SDEQ
PUSHCONT {
	.loc ../contracts/abstracts/Ownable.tsol, 23
	DUP
}
IFREFELSE {
	CALL $_msgSender_119df25f_internal_macro$
}
CALLREF {
	CALL $_transferOwnership_d29d44ee_internal_macro$
}
.loc ../contracts/abstracts/Ownable.tsol, 26
DROP
TRUE
SETGLOB 11
.loc ../contracts/abstracts/Ownable.tsol, 0

.macro owner
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/abstracts/Ownable.tsol, 40
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/abstracts/Ownable.tsol, 0
CALLREF {
	CALL $owner_8da5cb5b_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST x9f013291
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STSLICE
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	owner_8da5cb5b_internal
.type	owner_8da5cb5b_internal, @function
CALL $owner_8da5cb5b_internal_macro$

.macro owner_8da5cb5b_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 41
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHPOW2 7
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 10
.loc ../contracts/abstracts/Ownable.tsol, 0

.globl	_checkOwner_53a72975_internal
.type	_checkOwner_53a72975_internal, @function
CALL $_checkOwner_53a72975_internal_macro$

.macro _checkOwner_53a72975_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 48
CALLREF {
	CALL $owner_8da5cb5b_internal_macro$
}
CALLREF {
	CALL $_msgSender_119df25f_internal_macro$
}
SDEQ
THROWIFNOT 1000
.loc ../contracts/abstracts/Ownable.tsol, 0

.macro renounceOwnership
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/abstracts/Ownable.tsol, 58
ENDS
.loc ../contracts/abstracts/Ownable.tsol, 0
CALLREF {
	CALL $renounceOwnership_715018a6_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	renounceOwnership_715018a6_internal
.type	renounceOwnership_715018a6_internal, @function
CALL $renounceOwnership_715018a6_internal_macro$

.macro renounceOwnership_715018a6_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 33
CALLREF {
	CALL $_checkOwner_53a72975_internal_macro$
}
.loc ../contracts/abstracts/Ownable.tsol, 59
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
CALLREF {
	CALL $_transferOwnership_d29d44ee_internal_macro$
}
.loc ../contracts/abstracts/Ownable.tsol, 0

.macro transferOwnership
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/abstracts/Ownable.tsol, 66
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/abstracts/Ownable.tsol, 0
CALLREF {
	CALL $transferOwnership_f2fde38b_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	transferOwnership_f2fde38b_internal
.type	transferOwnership_f2fde38b_internal, @function
CALL $transferOwnership_f2fde38b_internal_macro$

.macro transferOwnership_f2fde38b_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 33
CALLREF {
	CALL $_checkOwner_53a72975_internal_macro$
}
.loc ../contracts/abstracts/Ownable.tsol, 67
DUP
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SDEQ
THROWIF 1001
.loc ../contracts/abstracts/Ownable.tsol, 68
DUP
MYADDR
SDEQ
THROWIF 1007
.loc ../contracts/abstracts/Ownable.tsol, 70
CALLREF {
	CALL $_transferOwnership_d29d44ee_internal_macro$
}
.loc ../contracts/abstracts/Ownable.tsol, 0

.globl	_transferOwnership_d29d44ee_internal
.type	_transferOwnership_d29d44ee_internal, @function
CALL $_transferOwnership_d29d44ee_internal_macro$

.macro _transferOwnership_d29d44ee_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 78
GETGLOB 10
.loc ../contracts/abstracts/Ownable.tsol, 79
OVER
SETGLOB 10
.loc ../contracts/abstracts/Ownable.tsol, 80
PUSHREFSLICE {
	.blob xc0000000000000000000000001
}
NEWC
STSLICE
ROTREV
NEWC
STSLICECONST x6115f072
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/abstracts/Ownable.tsol, 0

.globl	_backupOwnable_1fa1c240_internal
.type	_backupOwnable_1fa1c240_internal, @function
CALL $_backupOwnable_1fa1c240_internal_macro$

.macro _backupOwnable_1fa1c240_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 84
GETGLOB 11
GETGLOB 10
NEWC
STSLICE
STI 1
ENDC
.loc ../contracts/abstracts/Ownable.tsol, 0

.globl	_restoreOwnable_b415e8a2_internal
.type	_restoreOwnable_b415e8a2_internal, @function
CALL $_restoreOwnable_b415e8a2_internal_macro$

.macro _restoreOwnable_b415e8a2_internal_macro
.loc ../contracts/abstracts/Ownable.tsol, 88
CTOS
.loc ../contracts/abstracts/Ownable.tsol, 89
LDMSGADDR
PLDI 1
.loc ../contracts/abstracts/Ownable.tsol, 91
SWAP
SETGLOB 10
.loc ../contracts/abstracts/Ownable.tsol, 92
SETGLOB 11
.loc ../contracts/abstracts/Ownable.tsol, 0

.globl	_msgSender_119df25f_internal
.type	_msgSender_119df25f_internal, @function
CALL $_msgSender_119df25f_internal_macro$

.macro _msgSender_119df25f_internal_macro
.loc ../contracts/abstracts/Context.tsol, 18
GETGLOB 9
.loc ../contracts/abstracts/Context.tsol, 0

.globl	_msgData_8b49d47e_internal
.type	_msgData_8b49d47e_internal, @function
CALL $_msgData_8b49d47e_internal_macro$

.macro _msgData_8b49d47e_internal_macro
.loc ../contracts/abstracts/Context.tsol, 22
DEPTH
ADDCONST -4
PICK
.loc ../contracts/abstracts/Context.tsol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDMSGADDR
LDI 1
LDU 64
LDREF
ENDS
CTOS
LDU 256
LDU 16
LDU 16
LDI 1
LDU 64
LDU 64
LDI 1
SWAP
NULLROTRIFNOT
PUSHCONT {
	LDU 64
}
IF
LDU 128
LDU 16
LDU 128
LDI 1
LDU 128
LDU 8
LDDICT
LDU 16
LDU 16
ROTREV
PAIR
SWAP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDREF
ENDS
CTOS
LDDICT
LDDICT
LDDICT
LDREF
ENDS
CTOS
LDDICT
LDDICT
LDU 128
LDU 128
LDDICT
ROLLREV 3
TRIPLE
SWAP
ENDS
PUSHINT 0
GETGLOBVAR
GETGLOB 1
GETGLOB 2
GETGLOB 3
GETGLOB 4
GETGLOB 5
GETGLOB 6
GETGLOB 7
GETGLOB 8
GETGLOB 9
PUSHINT 26
PUSHINT 10
BLKSWX
PUSHINT 36
TUPLEVAR
POP C7
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 0
	GETGLOBVAR
	GETGLOB 1
	GETGLOB 2
	GETGLOB 3
	GETGLOB 4
	GETGLOB 5
	GETGLOB 6
	GETGLOB 7
	GETGLOB 8
	GETGLOB 9
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	PUSHINT 1
	PUSH S13
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	PUSHINT 0
	BLKPUSH 5, 0
	NULL
	PUSHINT 0
	BLKPUSH 5, 0
	NEWDICT
	PUSHINT 0
	DUP
	PAIR
	PUSHINT 0
	NEWDICT
	PAIR
	DUP
	NEWDICT
	BLKPUSH 4, 0
	PUSHINT 0
	DUP
	NEWDICT
	TRIPLE
	PUSHINT 36
	TUPLEVAR
	POP C7
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 1800000
	SETGLOB 17
	PUSHINT 60000
	SETGLOB 18
	PUSHINT 300000
	SETGLOB 19
	PUSHINT 1000000000
	SETGLOB 20
	PUSHINT 4
	SETGLOB 21
	FALSE
	SETGLOB 23
	PUSHINT 10000000
	SETGLOB 24
	PUSHINT 0
	SETGLOB 25
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
PUSH C7
FALSE
PUSHINT 36
SETINDEXVARQ
PUSHINT 37
UNTUPLEVAR
DROP
PUSHINT 36
PUSHINT 0
REVX
BLKDROP 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STSLICE
STI 1
STU 64
PUSHINT 23
ROLLREVX
NEWC
STU 256
STU 16
STU 16
STI 1
STU 64
STU 64
XCPU S1, S0
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 64
}
IFELSE
STU 128
STU 16
STU 128
STI 1
STU 128
STU 8
STDICT
SWAP
UNPAIR
XCHG S2
STU 16
STU 16
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
ROLLREV 6
NEWC
STDICT
STDICT
STDICT
ROLLREV 3
NEWC
STDICT
STDICT
SWAP
UNTRIPLE
REVERSE 4, 0
STU 128
STU 128
STDICT
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
IF
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro nonce
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 12
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000c4ed6b8d
	NEWC
	STSLICE
	STU 64
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro seed
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 13
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000d012c37c
	NEWC
	STSLICE
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro blueBeamsNumber
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 14
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000bd603194
	NEWC
	STSLICE
	STU 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro redBeamsNumber
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 15
OVER
PUSHCONT {
	PUSHSLICE xc00000000000000000000000008f7f0297
	NEWC
	STSLICE
	STU 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro boardInitialized
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 16
OVER
PUSHCONT {
	PUSHSLICE xc000000000000000000000000081e64e4a
	NEWC
	STSLICE
	STI 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro maxRoundDurationMs
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 17
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000eb6d1db0
	NEWC
	STSLICE
	STU 64
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro maxMoveDurationMs
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 18
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000aa637bce
	NEWC
	STSLICE
	STU 64
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro roundAutostartMs
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 19
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000f0053cbe
	NEWC
	STSLICE
	XCPU S1, S0
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		SWAP
		STSLICECONST 1
		STU 64
	}
	IFELSE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro prizeFundPerRound
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 20
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000c6dbefe8
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro maxPlayers
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 21
OVER
PUSHCONT {
	PUSHSLICE xc00000000000000000000000008aa56364
	NEWC
	STSLICE
	STU 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro entryStake
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 22
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000d8729eb4
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro giveUpAllowed
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 23
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000a2553390
	NEWC
	STSLICE
	STI 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro rake
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 24
OVER
PUSHCONT {
	PUSHSLICE xc000000000000000000000000083481063
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro jackpotRate
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 25
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000b6856831
	NEWC
	STSLICE
	STU 8
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro board
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 27
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000c0a430f4
	NEWC
	STSLICE
	SWAP
	UNPAIR
	XCHG S2
	STU 16
	STU 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.globl	Utils_no_obj__reserve_413ab4a8
.type	Utils_no_obj__reserve_413ab4a8, @function
CALL $Utils_no_obj__reserve_413ab4a8_macro$

.macro Utils_no_obj__reserve_413ab4a8_macro
.loc ../contracts/libraries/Utils.tsol, 45
GETPARAM 7
FIRST
DEPTH
ADDCONST -2
PICK
SUB
UFITS 128
PUSHINT 100000000
MAX
.loc ../contracts/libraries/Utils.tsol, 0

.macro public_function_selector
DUP
PUSHINT 711162830
LEQ
IFJMPREF {
	DUP
	PUSHINT 73984067
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 26782424
		EQUAL
		IFJMPREF {
			CALL $generateBoard$
		}
		DUP
		PUSHINT 31870538
		EQUAL
		IFJMPREF {
			CALL $boardInitialized$
		}
		DUP
		PUSHINT 55054435
		EQUAL
		IFJMPREF {
			CALL $rake$
		}
		DUP
		PUSHINT 73984067
		EQUAL
		IFJMPREF {
			CALL $setMaxPlayers$
		}
	}
	DUP
	PUSHINT 259981975
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 178611044
		EQUAL
		IFJMPREF {
			CALL $maxPlayers$
		}
		DUP
		PUSHINT 221637799
		EQUAL
		IFJMPREF {
			CALL $createRound$
		}
		DUP
		PUSHINT 235197086
		EQUAL
		IFJMPREF {
			CALL $transferOwnership$
		}
		DUP
		PUSHINT 259981975
		EQUAL
		IFJMPREF {
			CALL $redBeamsNumber$
		}
	}
	DUP
	PUSHINT 545079194
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 309404560
		EQUAL
		IFJMPREF {
			CALL $getBoardReserves$
		}
		DUP
		PUSHINT 440430254
		EQUAL
		IFJMPREF {
			CALL $getRounds$
		}
		DUP
		PUSHINT 520172177
		EQUAL
		IFJMPREF {
			CALL $owner$
		}
		DUP
		PUSHINT 545079194
		EQUAL
		IFJMPREF {
			CALL $claim$
		}
	}
	DUP
	PUSHINT 711162830
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 569740216
		EQUAL
		IFJMPREF {
			CALL $setMaxRoundTimeMs$
		}
		DUP
		PUSHINT 576009104
		EQUAL
		IFJMPREF {
			CALL $giveUpAllowed$
		}
		DUP
		PUSHINT 600035862
		EQUAL
		IFJMPREF {
			CALL $getBoard$
		}
		DUP
		PUSHINT 711162830
		EQUAL
		IFJMPREF {
			CALL $maxMoveDurationMs$
		}
	}
}
DUP
PUSHINT 1483906740
LEQ
IFJMPREF {
	DUP
	PUSHINT 914712625
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 723004672
		EQUAL
		IFJMPREF {
			CALL $setPlayerGiveUpAllowed$
		}
		DUP
		PUSHINT 765412801
		EQUAL
		IFJMPREF {
			CALL $setAutostartMs$
		}
		DUP
		PUSHINT 774327930
		EQUAL
		IFJMPREF {
			CALL $getRoundReserves$
		}
		DUP
		PUSHINT 914712625
		EQUAL
		IFJMPREF {
			CALL $jackpotRate$
		}
	}
	DUP
	PUSHINT 1084502260
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 964159746
		EQUAL
		IFJMPREF {
			CALL $setPrizeFund$
		}
		DUP
		PUSHINT 1009536692
		EQUAL
		IFJMPREF {
			CALL $getRound$
		}
		DUP
		PUSHINT 1029714324
		EQUAL
		IFJMPREF {
			CALL $blueBeamsNumber$
		}
		DUP
		PUSHINT 1084502260
		EQUAL
		IFJMPREF {
			CALL $board$
		}
	}
	DUP
	PUSHINT 1214285431
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1116451655
		EQUAL
		IFJMPREF {
			CALL $getRoundLatestMove$
		}
		DUP
		PUSHINT 1156410253
		EQUAL
		IFJMPREF {
			CALL $nonce$
		}
		DUP
		PUSHINT 1188818920
		EQUAL
		IFJMPREF {
			CALL $prizeFundPerRound$
		}
		DUP
		PUSHINT 1214285431
		EQUAL
		IFJMPREF {
			CALL $setMaxMoveTimeMs$
		}
	}
	DUP
	PUSHINT 1483906740
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1224777130
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
		DUP
		PUSHINT 1343406972
		EQUAL
		IFJMPREF {
			CALL $seed$
		}
		DUP
		PUSHINT 1432997906
		EQUAL
		IFJMPREF {
			CALL $roll$
		}
		DUP
		PUSHINT 1483906740
		EQUAL
		IFJMPREF {
			CALL $entryStake$
		}
	}
}
DUP
PUSHINT 2114115131
LEQ
IFJMPREF {
	DUP
	PUSHINT 1802313136
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1633861117
		EQUAL
		IFJMPREF {
			CALL $joinRound$
		}
		DUP
		PUSHINT 1729444094
		EQUAL
		IFJMPREF {
			CALL $renounceOwnership$
		}
		DUP
		PUSHINT 1763727179
		EQUAL
		IFJMPREF {
			CALL $setJackpotRate$
		}
		DUP
		PUSHINT 1802313136
		EQUAL
		IFJMPREF {
			CALL $maxRoundDurationMs$
		}
	}
	DUP
	PUSHINT 2114115131
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1879391422
		EQUAL
		IFJMPREF {
			CALL $roundAutostartMs$
		}
		DUP
		PUSHINT 1885005180
		EQUAL
		IFJMPREF {
			CALL $setRake$
		}
		DUP
		PUSHINT 2114115131
		EQUAL
		IFJMPREF {
			CALL $setEntryStake$
		}
	}
}

